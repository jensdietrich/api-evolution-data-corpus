Class: testing_lib.accessModifierClazzAccessDecrease.AccessModifierClazzAccessDecrease (Classification: C2)
 Modifier: public synchronized x synchronized (Generalised) (Classification: MOD) (Invocation: binary+source)
 Constructor: AccessModifierClazzAccessDecrease (Classification: M2)
  Modifier: public x <empty> (Generalised) (Classification: MOD) (Invocation: binary+source)
  Return type: void
Class: testing_lib.accessModifierClazzAccessIncrease.AccessModifierClazzAccessIncrease (Classification: C2)
 Constructor: AccessModifierClazzAccessIncrease (Classification: M2)
  Modifier: <empty> x public (Specialised) (Classification: MOD) (Extension: source)
  Return type: void
Class: testing_lib.accessModifierClazzConstructorAccessDecrease.AccessModifierClazzConstructorAccessDecrease (Classification: C2)
 Constructor: AccessModifierClazzConstructorAccessDecrease (Classification: M2)
  Modifier: public x protected (Generalised) (Classification: MOD) (Invocation: binary+source)
  Return type: void
 Constructor: AccessModifierClazzConstructorAccessDecrease (Classification: M2)
  Modifier: public x <empty> (Generalised) (Classification: MOD) (Invocation: binary+source)
  Argument: int
  Return type: void
 Constructor: AccessModifierClazzConstructorAccessDecrease(int, int) (Not found) (Classification: M1) (Extension: binary+source Invocation: binary+source)
 Constructor: AccessModifierClazzConstructorAccessDecrease (Classification: M2)
  Modifier: protected x <empty> (Generalised) (Classification: MOD) (Invocation: binary+source)
  Argument: int
  Argument: int
  Argument: int
  Return type: void
 Constructor: AccessModifierClazzConstructorAccessDecrease(int, int, int, int) (Not found) (Classification: M1) (Extension: binary+source Invocation: binary+source)
 Constructor: AccessModifierClazzConstructorAccessDecrease(int, int, int, int, int) (Not found) (Classification: M1) (Extension: binary+source Invocation: binary+source)
Class: testing_lib.accessModifierClazzConstructorAccessIncrease.AccessModifierClazzConstructorAccessIncrease (Classification: C2)
 Constructor: AccessModifierClazzConstructorAccessIncrease (Classification: M2)
  Modifier: <empty> x protected (Specialised) (Classification: MOD) (Extension: source)
  Argument: int
  Argument: int
  Argument: int
  Return type: void
 Constructor: AccessModifierClazzConstructorAccessIncrease (Classification: M2)
  Modifier: <empty> x public (Specialised) (Classification: MOD) (Extension: source)
  Argument: int
  Argument: int
  Argument: int
  Argument: int
  Return type: void
 Constructor: AccessModifierClazzConstructorAccessIncrease (Classification: M2)
  Modifier: protected x public (Specialised) (Classification: MOD) (Extension: source)
  Argument: int
  Argument: int
  Argument: int
  Argument: int
  Argument: int
  Return type: void
Class: testing_lib.accessModifierClazzFieldAccessDecrease.AccessModifierClazzFieldAccessDecrease (Classification: C2)
 Field: fieldNonToPrivate (Not found) (Classification: F1) (Extension: source Invocation: binary+source)
 Field: fieldProtectedToNon (Classification: F2)
  Modifier: protected x <empty> (Generalised) (Classification: MOD) (Invocation: binary+source)
 Field: fieldProtectedToPrivate (Not found) (Classification: F1) (Extension: source Invocation: binary+source)
 Field: fieldPublicToNon (Classification: F2)
  Modifier: public x <empty> (Generalised) (Classification: MOD) (Invocation: binary+source)
 Field: fieldPublicToPrivate (Not found) (Classification: F1) (Extension: source Invocation: binary+source)
 Field: fieldPublicToProtected (Classification: F2)
  Modifier: public x protected (Generalised) (Classification: MOD) (Invocation: binary+source)
Class: testing_lib.accessModifierClazzMethodAccessDecrease.AccessModifierClazzMethodAccessDecrease (Classification: C2)
 Method: void methodNonToPrivate() (Not found) (Classification: M1) (Extension: source Invocation: binary+source)
 Method: methodProtectedToNon (Classification: M2)
  Modifier: protected x <empty> (Generalised) (Classification: MOD) (Invocation: binary+source)
  Return type: void
 Method: void methodProtectedToPrivate() (Not found) (Classification: M1) (Extension: source Invocation: binary+source)
 Method: methodPublicToNon (Classification: M2)
  Modifier: public x <empty> (Generalised) (Classification: MOD) (Invocation: binary+source)
  Return type: void
 Method: void methodPublicToPrivate() (Not found) (Classification: M1) (Extension: source Invocation: binary+source)
 Method: methodPublicToProtected (Classification: M2)
  Modifier: public x protected (Generalised) (Classification: MOD) (Invocation: binary+source)
  Return type: void
Class: testing_lib.accessModifierClazzMethodAccessIncrease.AccessModifierClazzMethodAccessIncrease (Classification: C2)
 Method: methodNonToProtected (Classification: M2)
  Modifier: <empty> x protected (Specialised) (Classification: MOD) (Extension: source)
  Return type: void
 Method: methodNonToPublic (Classification: M2)
  Modifier: <empty> x public (Specialised) (Classification: MOD) (Extension: source)
  Return type: void
 Method: void methodPrivateToNon() (Added) (Extension: source)
 Method: void methodPrivateToProtected() (Added) (Extension: source)
 Method: void methodPrivateToPublic() (Added) (Extension: source)
 Method: methodProtectedToPublic (Classification: M2)
  Modifier: protected x public (Specialised) (Classification: MOD) (Extension: source)
  Return type: void
Class: testing_lib.accessModifierClazzNestedClazzAccessDecrease.AccessModifierClazzNestedClazzAccessDecrease$ClazzNonToPrivate (Classification: C2)
 Constructor: AccessModifierClazzNestedClazzAccessDecrease$ClazzNonToPrivate(testing_lib.accessModifierClazzNestedClazzAccessDecrease.AccessModifierClazzNestedClazzAccessDecrease) (Not found) (Classification: M1) (Extension: binary+source Invocation: binary+source)
Class: testing_lib.accessModifierClazzNestedClazzAccessDecrease.AccessModifierClazzNestedClazzAccessDecrease$ClazzProtectedToNon (Classification: C2)
 Modifier: protected x <empty> (Generalised) (Classification: MOD) (Invocation: binary+source)
 Constructor: AccessModifierClazzNestedClazzAccessDecrease$ClazzProtectedToNon (Classification: M2)
  Modifier: protected x <empty> (Generalised) (Classification: MOD) (Invocation: binary+source)
  Argument: testing_lib.accessModifierClazzNestedClazzAccessDecrease.AccessModifierClazzNestedClazzAccessDecrease
  Return type: void
Class: testing_lib.accessModifierClazzNestedClazzAccessDecrease.AccessModifierClazzNestedClazzAccessDecrease$ClazzProtectedToPrivate (Not found) (Classification: C1) (Extension: source Invocation: binary+source)
Class: testing_lib.accessModifierClazzNestedClazzAccessDecrease.AccessModifierClazzNestedClazzAccessDecrease$ClazzPublicToNon (Classification: C2)
 Modifier: public x <empty> (Generalised) (Classification: MOD) (Invocation: binary+source)
 Constructor: AccessModifierClazzNestedClazzAccessDecrease$ClazzPublicToNon (Classification: M2)
  Modifier: public x <empty> (Generalised) (Classification: MOD) (Invocation: binary+source)
  Argument: testing_lib.accessModifierClazzNestedClazzAccessDecrease.AccessModifierClazzNestedClazzAccessDecrease
  Return type: void
Class: testing_lib.accessModifierClazzNestedClazzAccessDecrease.AccessModifierClazzNestedClazzAccessDecrease$ClazzPublicToPrivate (Not found) (Classification: C1) (Extension: source Invocation: binary+source)
Class: testing_lib.accessModifierClazzNestedClazzAccessDecrease.AccessModifierClazzNestedClazzAccessDecrease$ClazzPublicToProtected (Classification: C2)
 Modifier: public x protected (Generalised) (Classification: MOD) (Invocation: binary+source)
 Constructor: AccessModifierClazzNestedClazzAccessDecrease$ClazzPublicToProtected (Classification: M2)
  Modifier: public x protected (Generalised) (Classification: MOD) (Invocation: binary+source)
  Argument: testing_lib.accessModifierClazzNestedClazzAccessDecrease.AccessModifierClazzNestedClazzAccessDecrease
  Return type: void
Class: testing_lib.accessModifierClazzNestedClazzAccessIncrease.AccessModifierClazzNestedClazzAccessIncrease$ClazzNonToProtected (Classification: C2)
 Constructor: AccessModifierClazzNestedClazzAccessIncrease$ClazzNonToProtected (Classification: M2)
  Modifier: <empty> x protected (Specialised) (Classification: MOD) (Extension: source)
  Argument: testing_lib.accessModifierClazzNestedClazzAccessIncrease.AccessModifierClazzNestedClazzAccessIncrease
  Return type: void
Class: testing_lib.accessModifierClazzNestedClazzAccessIncrease.AccessModifierClazzNestedClazzAccessIncrease$ClazzNonToPublic (Classification: C2)
 Constructor: AccessModifierClazzNestedClazzAccessIncrease$ClazzNonToPublic (Classification: M2)
  Modifier: <empty> x public (Specialised) (Classification: MOD) (Extension: source)
  Argument: testing_lib.accessModifierClazzNestedClazzAccessIncrease.AccessModifierClazzNestedClazzAccessIncrease
  Return type: void
Class: testing_lib.accessModifierClazzNestedClazzAccessIncrease.AccessModifierClazzNestedClazzAccessIncrease$ClazzProtectedToPublic (Classification: C2)
 Constructor: AccessModifierClazzNestedClazzAccessIncrease$ClazzProtectedToPublic (Classification: M2)
  Modifier: protected x public (Specialised) (Classification: MOD) (Extension: source)
  Argument: testing_lib.accessModifierClazzNestedClazzAccessIncrease.AccessModifierClazzNestedClazzAccessIncrease
  Return type: void
Class: testing_lib.accessModifierClazzNestedIfazeAccessDecrease.AccessModifierClazzNestedIfazeAccessDecrease$IfazeProtectedToNon (Classification: C2)
 Modifier: protected abstract static interface x abstract static interface (Generalised) (Classification: MOD) (Invocation: binary+source)
Class: testing_lib.accessModifierClazzNestedIfazeAccessDecrease.AccessModifierClazzNestedIfazeAccessDecrease$IfazeProtectedToPrivate (Not found) (Classification: C1) (Extension: source Invocation: binary+source)
Class: testing_lib.accessModifierClazzNestedIfazeAccessDecrease.AccessModifierClazzNestedIfazeAccessDecrease$IfazePublicToNon (Classification: C2)
 Modifier: public abstract static interface x abstract static interface (Generalised) (Classification: MOD) (Invocation: binary+source)
Class: testing_lib.accessModifierClazzNestedIfazeAccessDecrease.AccessModifierClazzNestedIfazeAccessDecrease$IfazePublicToPrivate (Not found) (Classification: C1) (Extension: source Invocation: binary+source)
Class: testing_lib.accessModifierClazzNestedIfazeAccessDecrease.AccessModifierClazzNestedIfazeAccessDecrease$IfazePublicToProtected (Classification: C2)
 Modifier: public abstract static interface x protected abstract static interface (Generalised) (Classification: MOD) (Invocation: binary+source)
Class: testing_lib.dataTypeClazzConstructorParamBoxing.DataTypeClazzConstructorParamBoxing (Classification: C2)
 Constructor: DataTypeClazzConstructorParamBoxing (Classification: M2)
  Argument: int x java.lang.Integer ((Un)boxing) (Classification: M.P3) (Extension: source Invocation: binary)
  Return type: void
Class: testing_lib.dataTypeClazzConstructorParamGeneralization.DataTypeClazzConstructorParamGeneralization (Classification: C2)
 Constructor: DataTypeClazzConstructorParamGeneralization (Classification: M2)
  Argument: java.lang.Integer x java.lang.Number (Generalised) (Classification: M.P1) (Extension: source Invocation: binary)
  Return type: void
Class: testing_lib.dataTypeClazzConstructorParamMutation.DataTypeClazzConstructorParamMutation (Classification: C2)
 Constructor: DataTypeClazzConstructorParamMutation (Classification: M2)
  Argument: java.lang.Integer x java.lang.String (Incompatible) (Extension: source Invocation: binary+source)
  Return type: void
Class: testing_lib.dataTypeClazzConstructorParamNarrowing.DataTypeClazzConstructorParamNarrowing (Classification: C2)
 Constructor: DataTypeClazzConstructorParamNarrowing (Classification: M2)
  Argument: double x int (Specialised) (Extension: source Invocation: binary+source)
  Return type: void
Class: testing_lib.dataTypeClazzConstructorParamSpecialization.DataTypeClazzConstructorParamSpecialization (Classification: C2)
 Constructor: DataTypeClazzConstructorParamSpecialization (Classification: M2)
  Argument: java.lang.Number x java.lang.Integer (Specialised) (Extension: source Invocation: binary+source)
  Return type: void
Class: testing_lib.dataTypeClazzConstructorParamUnboxing.DataTypeClazzConstructorParamUnboxing (Classification: C2)
 Constructor: DataTypeClazzConstructorParamUnboxing (Classification: M2)
  Argument: java.lang.Integer x int ((Un)boxing) (Classification: M.P4) (Extension: source Invocation: binary)
  Return type: void
Class: testing_lib.dataTypeClazzConstructorParamWidening.DataTypeClazzConstructorParamWidening (Classification: C2)
 Constructor: DataTypeClazzConstructorParamWidening (Classification: M2)
  Argument: int x double (Generalised) (Classification: M.P2) (Extension: source Invocation: binary)
  Return type: void
Class: testing_lib.dataTypeClazzFieldBoxing.DataTypeClazzFieldBoxing (Classification: C2)
 Field: field1 (Classification: F2)
  Type: int x java.lang.Integer ((Un)boxing) (Classification: F3) (Invocation: binary)
Class: testing_lib.dataTypeClazzFieldGeneralization.DataTypeClazzFieldGeneralization (Classification: C2)
 Field: field1 (Classification: F2)
  Type: java.lang.Integer x java.lang.Number (Generalised) (Invocation: binary+source)
Class: testing_lib.dataTypeClazzFieldMutation.DataTypeClazzFieldMutation (Classification: C2)
 Field: field1 (Classification: F2)
  Type: java.lang.Integer x java.lang.String (Incompatible) (Invocation: binary+source)
Class: testing_lib.dataTypeClazzFieldNarrowing.DataTypeClazzFieldNarrowing (Classification: C2)
 Field: field1 (Classification: F2)
  Type: double x int (Specialised) (Classification: F5) (Invocation: binary+source)
Class: testing_lib.dataTypeClazzFieldSpecialization.DataTypeClazzFieldSpecialization (Classification: C2)
 Field: field1 (Classification: F2)
  Type: java.lang.Number x java.lang.Integer (Specialised) (Classification: F6) (Invocation: binary+source)
Class: testing_lib.dataTypeClazzFieldUnboxing.DataTypeClazzFieldUnboxing (Classification: C2)
 Field: field1 (Classification: F2)
  Type: java.lang.Integer x int ((Un)boxing) (Classification: F4) (Invocation: binary)
Class: testing_lib.dataTypeClazzFieldWidening.DataTypeClazzFieldWidening (Classification: C2)
 Field: field1 (Classification: F2)
  Type: int x double (Generalised) (Invocation: binary+source)
Class: testing_lib.dataTypeClazzMethodParamBoxing.DataTypeClazzMethodParamBoxing (Classification: C2)
 Method: method1 (Classification: M2)
  Argument: int x java.lang.Integer ((Un)boxing) (Classification: M.P3) (Extension: source Invocation: binary)
  Return type: void
Class: testing_lib.dataTypeClazzMethodParamGeneralization.DataTypeClazzMethodParamGeneralization (Classification: C2)
 Method: method1 (Classification: M2)
  Argument: java.lang.Integer x java.lang.Number (Generalised) (Classification: M.P1) (Extension: source Invocation: binary)
  Return type: void
Class: testing_lib.dataTypeClazzMethodParamMutation.DataTypeClazzMethodParamMutation (Classification: C2)
 Method: method1 (Classification: M2)
  Argument: java.lang.Integer x java.lang.String (Incompatible) (Extension: source Invocation: binary+source)
  Return type: void
Class: testing_lib.dataTypeClazzMethodParamNarrowing.DataTypeClazzMethodParamNarrowing (Classification: C2)
 Method: method1 (Classification: M2)
  Argument: double x int (Specialised) (Extension: source Invocation: binary+source)
  Return type: void
Class: testing_lib.dataTypeClazzMethodParamSpecialization.DataTypeClazzMethodParamSpecialization (Classification: C2)
 Method: method1 (Classification: M2)
  Argument: java.lang.Number x java.lang.Integer (Specialised) (Extension: source Invocation: binary+source)
  Return type: void
Class: testing_lib.dataTypeClazzMethodParamUnboxing.DataTypeClazzMethodParamUnboxing (Classification: C2)
 Method: method1 (Classification: M2)
  Argument: java.lang.Integer x int ((Un)boxing) (Classification: M.P4) (Extension: source Invocation: binary)
  Return type: void
Class: testing_lib.dataTypeClazzMethodParamWidening.DataTypeClazzMethodParamWidening (Classification: C2)
 Method: method1 (Classification: M2)
  Argument: int x double (Generalised) (Classification: M.P2) (Extension: source Invocation: binary)
  Return type: void
Class: testing_lib.dataTypeClazzMethodReturnTypeBoxing.DataTypeClazzMethodReturnTypeBoxing (Classification: C2)
 Method: method (Classification: M2)
  Return type: int x java.lang.Integer ((Un)boxing) (Classification: M.R3) (Extension: source Invocation: binary)
Class: testing_lib.dataTypeClazzMethodReturnTypeGeneralization.DataTypeClazzMethodReturnTypeGeneralization (Classification: C2)
 Method: method (Classification: M2)
  Return type: java.lang.Integer x java.lang.Number (Generalised) (Invocation: binary+source)
Class: testing_lib.dataTypeClazzMethodReturnTypeMutation.DataTypeClazzMethodReturnTypeMutation (Classification: C2)
 Method: method (Classification: M2)
  Return type: java.lang.Integer x java.lang.String (Incompatible) (Extension: source Invocation: binary+source)
Class: testing_lib.dataTypeClazzMethodReturnTypeNarrowing.DataTypeClazzMethodReturnTypeNarrowing (Classification: C2)
 Method: method (Classification: M2)
  Return type: double x int (Specialised) (Classification: M.R2) (Extension: source Invocation: binary)
Class: testing_lib.dataTypeClazzMethodReturnTypeSpecialization.DataTypeClazzMethodReturnTypeSpecialization (Classification: C2)
 Method: method (Classification: M2)
  Return type: java.lang.Number x java.lang.Integer (Specialised) (Classification: M.R1) (Extension: source Invocation: binary)
Class: testing_lib.dataTypeClazzMethodReturnTypeUnboxing.DataTypeClazzMethodReturnTypeUnboxing (Classification: C2)
 Method: method (Classification: M2)
  Return type: java.lang.Integer x int ((Un)boxing) (Classification: M.R4) (Extension: source Invocation: binary)
Class: testing_lib.dataTypeClazzMethodReturnTypeWidening.DataTypeClazzMethodReturnTypeWidening (Classification: C2)
 Method: method (Classification: M2)
  Return type: int x double (Generalised) (Invocation: binary+source)
Class: testing_lib.dataTypeIfazeConstantGeneralization.DataTypeIfazeConstantGeneralization (Classification: C2)
 Field: FIELD1 (Classification: F2)
  Type: java.lang.Integer x java.lang.Number (Generalised) (Invocation: binary+source)
Class: testing_lib.dataTypeIfazeConstantMutation.DataTypeIfazeConstantMutation (Classification: C2)
 Field: FIELD1 (Classification: F2)
  Type: java.lang.Integer x java.lang.String (Incompatible) (Invocation: binary+source)
Class: testing_lib.dataTypeIfazeConstantNarrowing.DataTypeIfazeConstantNarrowing (Classification: C2)
 Field: FIELD1 (Classification: F2)
  Type: double x int (Specialised) (Classification: F5) (Invocation: binary+source)
Class: testing_lib.dataTypeIfazeConstantSpecialization.DataTypeIfazeConstantSpecialization (Classification: C2)
 Field: FIELD1 (Classification: F2)
  Type: java.lang.Number x java.lang.Integer (Specialised) (Classification: F6) (Invocation: binary+source)
Class: testing_lib.dataTypeIfazeConstantUnboxing.DataTypeIfazeConstantUnboxing (Classification: C2)
 Field: FIELD1 (Classification: F2)
  Type: java.lang.Integer x int ((Un)boxing) (Classification: F4) (Invocation: binary)
Class: testing_lib.dataTypeIfazeConstantWidening.DataTypeIfazeConstantWidening (Classification: C2)
 Field: FIELD1 (Classification: F2)
  Type: int x double (Generalised) (Invocation: binary+source)
Class: testing_lib.dataTypeIfazeMethodParamBoxing.DataTypeIfazeMethodParamBoxing (Classification: C2)
 Method: method1 (Classification: M2)
  Argument: int x java.lang.Integer ((Un)boxing) (Classification: M.P3) (Extension: source Invocation: binary)
  Return type: void
Class: testing_lib.dataTypeIfazeMethodParamGeneralization.DataTypeIfazeMethodParamGeneralization (Classification: C2)
 Method: method1 (Classification: M2)
  Argument: java.lang.Integer x java.lang.Number (Generalised) (Classification: M.P1) (Extension: source Invocation: binary)
  Return type: void
Class: testing_lib.dataTypeIfazeMethodParamMutation.DataTypeIfazeMethodParamMutation (Classification: C2)
 Method: method1 (Classification: M2)
  Argument: java.lang.Integer x java.lang.String (Incompatible) (Extension: source Invocation: binary+source)
  Return type: void
Class: testing_lib.dataTypeIfazeMethodParamNarrowing.DataTypeIfazeMethodParamNarrowing (Classification: C2)
 Method: method1 (Classification: M2)
  Argument: double x int (Specialised) (Extension: source Invocation: binary+source)
  Return type: void
Class: testing_lib.dataTypeIfazeMethodParamSpecialization.DataTypeIfazeMethodParamSpecialization (Classification: C2)
 Method: method1 (Classification: M2)
  Argument: java.lang.Number x java.lang.Integer (Specialised) (Extension: source Invocation: binary+source)
  Return type: void
Class: testing_lib.dataTypeIfazeMethodParamUnboxing.DataTypeIfazeMethodParamUnboxing (Classification: C2)
 Method: method1 (Classification: M2)
  Argument: java.lang.Integer x int ((Un)boxing) (Classification: M.P4) (Extension: source Invocation: binary)
  Return type: void
Class: testing_lib.dataTypeIfazeMethodParamWidening.DataTypeIfazeMethodParamWidening (Classification: C2)
 Method: method1 (Classification: M2)
  Argument: int x double (Generalised) (Classification: M.P2) (Extension: source Invocation: binary)
  Return type: void
Class: testing_lib.dataTypeIfazeMethodReturnTypeBoxing.DataTypeIfazeMethodReturnTypeBoxing (Classification: C2)
 Method: method1 (Classification: M2)
  Return type: int x java.lang.Integer ((Un)boxing) (Classification: M.R3) (Extension: source Invocation: binary)
Class: testing_lib.dataTypeIfazeMethodReturnTypeGeneralization.DataTypeIfazeMethodReturnTypeGeneralization (Classification: C2)
 Method: method1 (Classification: M2)
  Return type: java.lang.Integer x java.lang.Number (Generalised) (Invocation: binary+source)
Class: testing_lib.dataTypeIfazeMethodReturnTypeMutation.DataTypeIfazeMethodReturnTypeMutation (Classification: C2)
 Method: methodIntegerToString (Classification: M2)
  Return type: java.lang.Integer x java.lang.String (Incompatible) (Extension: source Invocation: binary+source)
 Method: methodIntegerToVoid (Classification: M2)
  Return type: java.lang.Integer x void (Generalised) (Invocation: binary+source)
 Method: methodVoidToInteger (Classification: M2)
  Return type: void x java.lang.Integer (Specialised) (Classification: M.R3) (Extension: source Invocation: binary)
Class: testing_lib.dataTypeIfazeMethodReturnTypeNarrowing.DataTypeIfazeMethodReturnTypeNarrowing (Classification: C2)
 Method: method1 (Classification: M2)
  Return type: double x int (Specialised) (Classification: M.R2) (Extension: source Invocation: binary)
Class: testing_lib.dataTypeIfazeMethodReturnTypeSpecialization.DataTypeIfazeMethodReturnTypeSpecialization (Classification: C2)
 Method: method1 (Classification: M2)
  Return type: java.lang.Number x java.lang.Integer (Specialised) (Classification: M.R1) (Extension: source Invocation: binary)
Class: testing_lib.dataTypeIfazeMethodReturnTypeUnboxing.DataTypeIfazeMethodReturnTypeUnboxing (Classification: C2)
 Method: method1 (Classification: M2)
  Return type: java.lang.Integer x int ((Un)boxing) (Classification: M.R4) (Extension: source Invocation: binary)
Class: testing_lib.dataTypeIfazeMethodReturnTypeWidening.DataTypeIfazeMethodReturnTypeWidening (Classification: C2)
 Method: method1 (Classification: M2)
  Return type: int x double (Generalised) (Invocation: binary+source)
Class: testing_lib.genericsWildcardsClazzConstructorParamAdd.GenericsWildcardsClazzConstructorParamAdd (Classification: C2)
 Constructor: GenericsWildcardsClazzConstructorParamAdd (Classification: M2)
  Argument: java.util.ArrayList<java.lang.Integer> x java.util.ArrayList<?>
   Type Argument: java.lang.Integer x ? (Generalised) (Extension: binary+source Invocation: source)
  Return type: void
Class: testing_lib.genericsWildcardsClazzConstructorParamDelete.GenericsWildcardsClazzConstructorParamDelete (Classification: C2)
 Constructor: GenericsWildcardsClazzConstructorParamDelete (Classification: M2)
  Argument: java.util.ArrayList<?> x java.util.ArrayList<java.lang.Integer>
   Type Argument: ? x java.lang.Integer (Specialised) (Extension: binary+source Invocation: source)
  Return type: void
Class: testing_lib.genericsWildcardsClazzConstructorParamLowerBoundsAdd.GenericsWildcardsClazzConstructorParamLowerBoundsAdd (Classification: C2)
 Constructor: GenericsWildcardsClazzConstructorParamLowerBoundsAdd (Classification: M2)
  Argument: java.util.ArrayList<?> x java.util.ArrayList<? super java.lang.Number>
   Type Argument: ? x ? super java.lang.Number
    Lower bounds: java.lang.Number x java.lang.Object (Generalised) (Extension: binary)
  Return type: void
Class: testing_lib.genericsWildcardsClazzConstructorParamLowerBoundsDelete.GenericsWildcardsClazzConstructorParamLowerBoundsDelete (Classification: C2)
 Constructor: GenericsWildcardsClazzConstructorParamLowerBoundsDelete (Classification: M2)
  Argument: java.util.ArrayList<? super java.lang.Number> x java.util.ArrayList<?>
   Type Argument: ? super java.lang.Number x ?
    Lower bounds: java.lang.Object x java.lang.Number (Specialised) (Extension: binary+source Invocation: source)
  Return type: void
Class: testing_lib.genericsWildcardsClazzConstructorParamLowerBoundsGeneralization.GenericsWildcardsClazzConstructorParamLowerBoundsGeneralization (Classification: C2)
 Constructor: GenericsWildcardsClazzConstructorParamLowerBoundsGeneralization (Classification: M2)
  Argument: java.util.ArrayList<? super java.lang.Integer> x java.util.ArrayList<? super java.lang.Number>
   Type Argument: ? super java.lang.Integer x ? super java.lang.Number
    Lower bounds: java.lang.Number x java.lang.Integer (Specialised) (Extension: binary+source Invocation: source)
  Return type: void
Class: testing_lib.genericsWildcardsClazzConstructorParamLowerBoundsMutation.GenericsWildcardsClazzConstructorParamLowerBoundsMutation (Classification: C2)
 Constructor: GenericsWildcardsClazzConstructorParamLowerBoundsMutation (Classification: M2)
  Argument: java.util.ArrayList<? super java.lang.Integer> x java.util.ArrayList<? super java.lang.String>
   Type Argument: ? super java.lang.Integer x ? super java.lang.String
    Lower bounds: java.lang.String x java.lang.Integer (Incompatible) (Extension: binary+source Invocation: source)
  Return type: void
Class: testing_lib.genericsWildcardsClazzConstructorParamLowerBoundsSpecialization.GenericsWildcardsClazzConstructorParamLowerBoundsSpecializaion (Classification: C2)
 Constructor: GenericsWildcardsClazzConstructorParamLowerBoundsSpecializaion (Classification: M2)
  Argument: java.util.ArrayList<? super java.lang.Number> x java.util.ArrayList<? super java.lang.Integer>
   Type Argument: ? super java.lang.Number x ? super java.lang.Integer
    Lower bounds: java.lang.Integer x java.lang.Number (Generalised) (Extension: binary)
  Return type: void
Class: testing_lib.genericsWildcardsClazzConstructorParamLowerBoundsToUpperBounds.GenericsWildcardsClazzConstructorParamLowerBoundsToUpperBounds (Classification: C2)
 Constructor: GenericsWildcardsClazzConstructorParamLowerBoundsToUpperBounds (Classification: M2)
  Argument: java.util.ArrayList<? super java.lang.Number> x java.util.ArrayList<? extends java.lang.Number>
   Type Argument: ? super java.lang.Number x ? extends java.lang.Number
    Lower bounds: java.lang.Object x java.lang.Number (Specialised) (Extension: binary+source Invocation: source)
    Upper bounds: java.lang.Object x java.lang.Number (Specialised) (Extension: binary)
  Return type: void
Class: testing_lib.genericsWildcardsClazzConstructorParamUpperBoundsAdd.GenericsWildcardsClazzConstructorParamUpperBoundsAdd (Classification: C2)
 Constructor: GenericsWildcardsClazzConstructorParamUpperBoundsAdd (Classification: M2)
  Argument: java.util.ArrayList<?> x java.util.ArrayList<? extends java.lang.Number>
   Type Argument: ? x ? extends java.lang.Number
    Upper bounds: java.lang.Object x java.lang.Number (Specialised) (Extension: binary)
  Return type: void
Class: testing_lib.genericsWildcardsClazzConstructorParamUpperBoundsDelete.GenericsWildcardsClazzConstructorParamUpperBoundsDelete (Classification: C2)
 Constructor: GenericsWildcardsClazzConstructorParamUpperBoundsDelete (Classification: M2)
  Argument: java.util.ArrayList<? extends java.lang.Number> x java.util.ArrayList<?>
   Type Argument: ? extends java.lang.Number x ?
    Upper bounds: java.lang.Number x java.lang.Object (Generalised) (Extension: binary+source Invocation: source)
  Return type: void
Class: testing_lib.genericsWildcardsClazzConstructorParamUpperBoundsGeneralization.GenericsWildcardsClazzConstructorParamUpperBoundsGeneralization (Classification: C2)
 Constructor: GenericsWildcardsClazzConstructorParamUpperBoundsGeneralization (Classification: M2)
  Argument: java.util.ArrayList<? extends java.lang.Integer> x java.util.ArrayList<? extends java.lang.Number>
   Type Argument: ? extends java.lang.Integer x ? extends java.lang.Number
    Upper bounds: java.lang.Integer x java.lang.Number (Generalised) (Extension: binary+source Invocation: source)
  Return type: void
Class: testing_lib.genericsWildcardsClazzConstructorParamUpperBoundsMutation.GenericsWildcardsClazzConstructorParamUpperBoundsMutation (Classification: C2)
 Constructor: GenericsWildcardsClazzConstructorParamUpperBoundsMutation (Classification: M2)
  Argument: java.util.ArrayList<? extends java.lang.Integer> x java.util.ArrayList<? extends java.lang.String>
   Type Argument: ? extends java.lang.Integer x ? extends java.lang.String
    Upper bounds: java.lang.Integer x java.lang.String (Incompatible) (Extension: binary+source Invocation: source)
  Return type: void
Class: testing_lib.genericsWildcardsClazzConstructorParamUpperBoundsSpecialization.GenericsWildcardsClazzConstructorParamUpperBoundsSpecialization (Classification: C2)
 Constructor: GenericsWildcardsClazzConstructorParamUpperBoundsSpecialization (Classification: M2)
  Argument: java.util.ArrayList<? extends java.lang.Number> x java.util.ArrayList<? extends java.lang.Integer>
   Type Argument: ? extends java.lang.Number x ? extends java.lang.Integer
    Upper bounds: java.lang.Number x java.lang.Integer (Specialised) (Extension: binary)
  Return type: void
Class: testing_lib.genericsWildcardsClazzConstructorParamUpperBoundsToLowerBounds.GenericsWildcardsClazzConstructorParamUpperBoundsToLowerBounds (Classification: C2)
 Constructor: GenericsWildcardsClazzConstructorParamUpperBoundsToLowerBounds (Classification: M2)
  Argument: java.util.ArrayList<? extends java.lang.Number> x java.util.ArrayList<? super java.lang.Number>
   Type Argument: ? extends java.lang.Number x ? super java.lang.Number
    Lower bounds: java.lang.Number x java.lang.Object (Generalised) (Extension: binary)
    Upper bounds: java.lang.Number x java.lang.Object (Generalised) (Extension: binary+source Invocation: source)
  Return type: void
Class: testing_lib.genericsWildcardsClazzMethodParamAdd.GenericsWildcardsClazzMethodParamAdd (Classification: C2)
 Method: method1 (Classification: M2)
  Argument: java.util.ArrayList<java.lang.String> x java.util.ArrayList<?>
   Type Argument: java.lang.String x ? (Generalised) (Extension: binary+source Invocation: source)
  Return type: void
Class: testing_lib.genericsWildcardsClazzMethodParamDelete.GenericsWildcardsClazzMethodParamDelete (Classification: C2)
 Method: method1 (Classification: M2)
  Argument: java.util.ArrayList<?> x java.util.ArrayList<java.lang.String>
   Type Argument: ? x java.lang.String (Specialised) (Extension: binary+source Invocation: source)
  Return type: void
Class: testing_lib.genericsWildcardsClazzMethodParamLowerBoundsAdd.GenericsWildcardsClazzMethodParamLowerBoundsAdd (Classification: C2)
 Method: method1 (Classification: M2)
  Argument: java.util.ArrayList<?> x java.util.ArrayList<? super java.lang.Number>
   Type Argument: ? x ? super java.lang.Number
    Lower bounds: java.lang.Number x java.lang.Object (Generalised) (Extension: binary)
  Return type: void
Class: testing_lib.genericsWildcardsClazzMethodParamLowerBoundsDelete.GenericsWildcardsClazzMethodParamLowerBoundsDelete (Classification: C2)
 Method: method1 (Classification: M2)
  Argument: java.util.ArrayList<? super java.lang.Number> x java.util.ArrayList<?>
   Type Argument: ? super java.lang.Number x ?
    Lower bounds: java.lang.Object x java.lang.Number (Specialised) (Extension: binary+source Invocation: source)
  Return type: void
Class: testing_lib.genericsWildcardsClazzMethodParamLowerBoundsGeneralization.GenericsWildcardsClazzMethodParamLowerBoundsGeneralization (Classification: C2)
 Method: method1 (Classification: M2)
  Argument: java.util.ArrayList<? super java.lang.Integer> x java.util.ArrayList<? super java.lang.Number>
   Type Argument: ? super java.lang.Integer x ? super java.lang.Number
    Lower bounds: java.lang.Number x java.lang.Integer (Specialised) (Extension: binary+source Invocation: source)
  Return type: void
Class: testing_lib.genericsWildcardsClazzMethodParamLowerBoundsMutation.GenericsWildcardsClazzMethodParamLowerBoundsMutation (Classification: C2)
 Method: method1 (Classification: M2)
  Argument: java.util.ArrayList<? super java.lang.Integer> x java.util.ArrayList<? super java.lang.String>
   Type Argument: ? super java.lang.Integer x ? super java.lang.String
    Lower bounds: java.lang.String x java.lang.Integer (Incompatible) (Extension: binary+source Invocation: source)
  Return type: void
Class: testing_lib.genericsWildcardsClazzMethodParamLowerBoundsSpecialization.GenericsWildcardsClazzMethodParamLowerBoundsSpecialization (Classification: C2)
 Method: method1 (Classification: M2)
  Argument: java.util.ArrayList<? super java.lang.Number> x java.util.ArrayList<? super java.lang.Integer>
   Type Argument: ? super java.lang.Number x ? super java.lang.Integer
    Lower bounds: java.lang.Integer x java.lang.Number (Generalised) (Extension: binary)
  Return type: void
Class: testing_lib.genericsWildcardsClazzMethodParamLowerBoundsToUpperBounds.GenericsWildcardsClazzMethodParamLowerBoundsToUpperBounds (Classification: C2)
 Method: method1 (Classification: M2)
  Argument: java.util.ArrayList<? super java.lang.Number> x java.util.ArrayList<? extends java.lang.Number>
   Type Argument: ? super java.lang.Number x ? extends java.lang.Number
    Lower bounds: java.lang.Object x java.lang.Number (Specialised) (Extension: binary+source Invocation: source)
    Upper bounds: java.lang.Object x java.lang.Number (Specialised) (Extension: binary)
  Return type: void
Class: testing_lib.genericsWildcardsClazzMethodParamUpperBoundsAdd.GenericsWildcardsClazzMethodParamUpperBoundsAdd (Classification: C2)
 Method: method1 (Classification: M2)
  Argument: java.util.ArrayList<?> x java.util.ArrayList<? extends java.lang.Number>
   Type Argument: ? x ? extends java.lang.Number
    Upper bounds: java.lang.Object x java.lang.Number (Specialised) (Extension: binary)
  Return type: void
Class: testing_lib.genericsWildcardsClazzMethodParamUpperBoundsDelete.GenericsWildcardsClazzMethodParamUpperBoundsDelete (Classification: C2)
 Method: method1 (Classification: M2)
  Argument: java.util.ArrayList<? extends java.lang.Number> x java.util.ArrayList<?>
   Type Argument: ? extends java.lang.Number x ?
    Upper bounds: java.lang.Number x java.lang.Object (Generalised) (Extension: binary+source Invocation: source)
  Return type: void
Class: testing_lib.genericsWildcardsClazzMethodParamUpperBoundsGeneralization.GenericsWildcardsClazzMethodParamUpperBoundsGeneralization (Classification: C2)
 Method: method1 (Classification: M2)
  Argument: java.util.ArrayList<? extends java.lang.Integer> x java.util.ArrayList<? extends java.lang.Number>
   Type Argument: ? extends java.lang.Integer x ? extends java.lang.Number
    Upper bounds: java.lang.Integer x java.lang.Number (Generalised) (Extension: binary+source Invocation: source)
  Return type: void
Class: testing_lib.genericsWildcardsClazzMethodParamUpperBoundsMutation.GenericsWildcardsClazzMethodParamUpperBoundsMutation (Classification: C2)
 Method: method1 (Classification: M2)
  Argument: java.util.ArrayList<? extends java.lang.Integer> x java.util.ArrayList<? extends java.lang.String>
   Type Argument: ? extends java.lang.Integer x ? extends java.lang.String
    Upper bounds: java.lang.Integer x java.lang.String (Incompatible) (Extension: binary+source Invocation: source)
  Return type: void
Class: testing_lib.genericsWildcardsClazzMethodParamUpperBoundsSpecialization.GenericsWildcardsClazzMethodParamUpperBoundsSpecialization (Classification: C2)
 Method: method1 (Classification: M2)
  Argument: java.util.ArrayList<? extends java.lang.Number> x java.util.ArrayList<? extends java.lang.Integer>
   Type Argument: ? extends java.lang.Number x ? extends java.lang.Integer
    Upper bounds: java.lang.Number x java.lang.Integer (Specialised) (Extension: binary)
  Return type: void
Class: testing_lib.genericsWildcardsClazzMethodParamUpperBoundsToLowerBounds.GenericsWildcardsClazzMethodParamUpperBoundsToLowerBounds (Classification: C2)
 Method: method1 (Classification: M2)
  Argument: java.util.ArrayList<? extends java.lang.Number> x java.util.ArrayList<? super java.lang.Number>
   Type Argument: ? extends java.lang.Number x ? super java.lang.Number
    Lower bounds: java.lang.Number x java.lang.Object (Generalised) (Extension: binary)
    Upper bounds: java.lang.Number x java.lang.Object (Generalised) (Extension: binary+source Invocation: source)
  Return type: void
Class: testing_lib.inheritanceClazzContractSuperClassSet.Clazz2 (Not found) (Classification: C1) (Extension: source Invocation: binary+source)
Class: testing_lib.inheritanceClazzContractSuperClassSet.InheritanceClazzContractSuperInterfaceSet (Classification: C2)
 Super: testing_lib.inheritanceClazzContractSuperClassSet.Clazz2 x testing_lib.inheritanceClazzContractSuperClassSet.Clazz1 (Generalised) (Invocation: binary+source)
 Method: void printClazz2() (Not found) (Classification: M1) (Extension: source Invocation: binary+source)
Class: testing_lib.inheritanceClazzExpandSuperClassSet.InheritanceClazzExpandSuperClassSet (Classification: C2)
 Method: void printClazz2() (Added) (Extension: source)
Class: testing_lib.inheritanceClazzMethodMovedFromSuperClass.Clazz1 (Classification: C2)
 Method: void method1() (Not found) (Classification: M1) (Extension: source Invocation: binary+source)
Class: testing_lib.inheritanceClazzMethodMovedToSuperClass.Clazz1 (Classification: C2)
 Method: void method1() (Added) (Extension: source)
Class: testing_lib.inheritanceClazzStartInherite.InheritanceClazzStartInherite (Classification: C2)
 Method: void methodClazz1() (Added) (Extension: source)
Class: testing_lib.inheritanceClazzStopInherite.InheritanceClazzStopInherite (Classification: C2)
 Super: testing_lib.inheritanceClazzStopInherite.Clazz1 (Not found) (Invocation: binary+source)
 Method: void methodClazz1() (Not found) (Classification: M1) (Extension: source Invocation: binary+source)
Class: testing_lib.inheritanceIfazeContractSuperinterfaceSet.InheritanceIfazeContractSuperinterfaceSet (Classification: C2)
 Class: testing_lib.inheritanceIfazeContractSuperinterfaceSet.Interface2 (Not found) (Classification: C1) (Extension: source Invocation: binary+source)
 Method: void ifaze2method1() (Not found) (Classification: M1) (Extension: source Invocation: binary+source)
Class: testing_lib.inheritanceIfazeContractSuperinterfaceSet.Interface2 (Not found) (Classification: C1) (Extension: source Invocation: binary+source)
Class: testing_lib.inheritanceIfazeExpandSuperinterfaceSet.InheritanceIfazeExpandSuperinterfaceSet (Classification: C2)
 Class: testing_lib.inheritanceIfazeExpandSuperinterfaceSet.Interface1 (Not found) (Classification: C1) (Extension: source Invocation: binary+source)
 Method: void ifaze2method1() (Added) (Extension: source)
Class: testing_lib.inheritanceIfazeMethodMovedFromSuperInterface.Interface1 (Classification: C2)
 Method: void method1() (Not found) (Classification: M1) (Extension: source Invocation: binary+source)
Class: testing_lib.inheritanceIfazeMethodMovedToSuperInterface.Interface1 (Classification: C2)
 Method: void method1() (Added) (Extension: source)
Class: testing_lib.inheritanceIfazeStartInherite.InheritanceIfazeStartInherite (Classification: C2)
 Method: void method1() (Added) (Extension: source)
Class: testing_lib.inheritanceIfazeStopInherite.InheritanceIfazeStopInherite (Classification: C2)
 Class: testing_lib.inheritanceIfazeStopInherite.Interface1 (Not found) (Classification: C1) (Extension: source Invocation: binary+source)
 Method: void method1() (Not found) (Classification: M1) (Extension: source Invocation: binary+source)
Class: testing_lib.membersClazzConstructorDelete.MembersClazzConstructorDelete (Classification: C2)
 Constructor: MembersClazzConstructorDelete(int) (Not found) (Classification: M1) (Extension: binary+source Invocation: binary+source)
Class: testing_lib.membersClazzConstructorParamAdd.MembersClazzConstructorParamAdd (Classification: C2)
 Constructor: MembersClazzConstructorParamAdd(java.lang.Integer) (Not found) (Classification: M1) (Extension: binary+source Invocation: binary+source)
Class: testing_lib.membersClazzConstructorParamDelete.MembersClazzConstructorParamDelete (Classification: C2)
 Constructor: MembersClazzConstructorParamDelete(java.lang.Integer, java.lang.String) (Not found) (Classification: M1) (Extension: binary+source Invocation: binary+source)
Class: testing_lib.membersClazzFieldConstantDelete.MembersClazzFieldConstantDelete (Classification: C2)
 Field: FIELD1 (Not found) (Classification: F1) (Extension: source Invocation: binary+source)
Class: testing_lib.membersClazzFieldDelete.MembersClazzFieldDelete (Classification: C2)
 Field: field1 (Not found) (Classification: F1) (Extension: source Invocation: binary+source)
Class: testing_lib.membersClazzMethodAbstractAdd.MembersClazzMethodAbstractAdd (Classification: C2)
 Method: void method1() (Added) (Extension: source)
Class: testing_lib.membersClazzMethodAbstractDelete.MembersClazzMethodAbstractDelete (Classification: C2)
 Method: void method1() (Not found) (Classification: M1) (Extension: source Invocation: binary+source)
Class: testing_lib.membersClazzMethodAdd.MembersClazzMethodAdd (Classification: C2)
 Method: void method1() (Added) (Extension: source)
Class: testing_lib.membersClazzMethodDelete.MembersClazzMethodDelete (Classification: C2)
 Method: void method1() (Not found) (Classification: M1) (Extension: source Invocation: binary+source)
Class: testing_lib.membersClazzMethodParamAdd.MembersClazzMethodParamAdd (Classification: C2)
 Method: void method1() (Not found) (Classification: M1) (Extension: source Invocation: binary+source)
 Method: void method1(java.lang.Integer) (Added) (Extension: source)
Class: testing_lib.membersClazzMethodParamDelete.MembersClazzMethodParamDelete (Classification: C2)
 Method: void method1() (Added) (Extension: source)
 Method: void method1(java.lang.Integer) (Not found) (Classification: M1) (Extension: source Invocation: binary+source)
Class: testing_lib.membersClazzNestedClazzDelete.MembersClazzNestedClazzDelete$NestedClazz (Not found) (Classification: C1) (Extension: source Invocation: binary+source)
Class: testing_lib.membersClazzNestedIfazeDelete.MembersClazzNestedIfazeDelete$NestedIfaze (Not found) (Classification: C1) (Extension: source Invocation: binary+source)
Class: testing_lib.membersIfazeConstantDelete.MembersIfazeConstantDelete (Classification: C2)
 Field: FIELD1 (Not found) (Classification: F1) (Extension: source Invocation: binary+source)
Class: testing_lib.membersIfazeMethodAdd.MembersIfazeMethodAdd (Classification: C2)
 Method: void method1() (Added) (Extension: source)
Class: testing_lib.membersIfazeMethodDefaultAdd.MembersIfazeMethodDefaultAdd (Classification: C2)
 Method: void method1() (Added) (Extension: source)
Class: testing_lib.membersIfazeMethodDefaultDelete.MembersIfazeMethodDefaultDelete (Classification: C2)
 Method: void method1() (Not found) (Classification: M1) (Extension: source Invocation: binary+source)
Class: testing_lib.membersIfazeMethodDelete.MembersIfazeMethodDelete (Classification: C2)
 Method: void method1() (Not found) (Classification: M1) (Extension: source Invocation: binary+source)
Class: testing_lib.membersIfazeMethodParamAdd.MembersIfazeMethodParamAdd (Classification: C2)
 Method: void method1() (Not found) (Classification: M1) (Extension: source Invocation: binary+source)
 Method: void method1(java.lang.Integer) (Added) (Extension: source)
Class: testing_lib.membersIfazeMethodParamDelete.MembersIfazeMethodParamDelete (Classification: C2)
 Method: void method1() (Added) (Extension: source)
 Method: void method1(java.lang.Integer) (Not found) (Classification: M1) (Extension: source Invocation: binary+source)
Class: testing_lib.membersIfazeNestedIfazeDelete.MembersIfazeNestedIfazeDelete$NestedIfaze (Not found) (Classification: C1) (Extension: source Invocation: binary+source)
Class: testing_lib.modifierClazzEffectivelyFinalToFinal.ModifierClazzEffectivelyFinalToFinal (Classification: C2)
 Modifier: public synchronized x public final synchronized (Added) (Classification: MOD) (Extension: binary+source)
Class: testing_lib.modifierClazzNonAbstractToAbstract.ModifierClazzNonAbstractToAbstract (Classification: C2)
 Modifier: public synchronized x public abstract synchronized (Added) (Classification: MOD) (Invocation: binary+source)
Class: testing_lib.modifierClazzNonFinalToFinal.ModifierClazzNonFinalToFinal (Classification: C2)
 Modifier: public synchronized x public final synchronized (Added) (Classification: MOD) (Extension: binary+source)
Class: testing_lib.modifierFieldNonFinalToFinal.ModifierFieldNonFinalToFinal (Classification: C2)
 Field: field1 (Classification: F2)
  Modifier: public x public final (Added) (Classification: MOD) (Extension: binary+source)
Class: testing_lib.modifierFieldNonStaticToStatic.ModifierFieldNonStaticToStatic (Classification: C2)
 Field: field1 (Classification: F2)
  Modifier: public x public static (Added) (Classification: F7) (Extension: binary+source Invocation: binary)
Class: testing_lib.modifierFieldStaticToNonStatic.ModifierFieldStaticToNonStatic (Classification: C2)
 Field: field1 (Classification: F2)
  Modifier: public static x public (Not found) (Extension: binary+source Invocation: binary)
Class: testing_lib.modifierMethodNonAbstractToAbstract.ModifierMethodNonAbstractToAbstract (Classification: C2)
 Method: method1 (Classification: M2)
  Modifier: public x public abstract (Added) (Classification: MOD) (Invocation: binary+source)
  Return type: void
Class: testing_lib.modifierMethodNonFinalToFinal.ModifierMethodNonFinalToFinal (Classification: C2)
 Method: method1 (Classification: M2)
  Modifier: public x public final (Added) (Classification: MOD) (Extension: binary+source)
  Return type: void
Class: testing_lib.modifierMethodNonStaticToStatic.ModifierMethodNonStaticToStatic (Classification: C2)
 Method: method1 (Classification: M2)
  Modifier: public x public static (Added) (Classification: M.M1) (Extension: binary+source Invocation: binary)
  Return type: void
Class: testing_lib.modifierMethodStaticToNonStatic.ModifierMethodStaticToNonStatic (Classification: C2)
 Method: method1 (Classification: M2)
  Modifier: public static x public (Not found) (Extension: binary+source Invocation: binary)
  Return type: void
Class: testing_lib.modifierNestedClazzNonStaticToStatic.ModifierNestedClazzNonStaticToStatic$NestedClazz (Classification: C2)
 Constructor: ModifierNestedClazzNonStaticToStatic$NestedClazz(testing_lib.modifierNestedClazzNonStaticToStatic.ModifierNestedClazzNonStaticToStatic) (Not found) (Classification: M1) (Extension: binary+source Invocation: binary+source)
Class: testing_lib.modifierNestedClazzStaticToNonStatic.ModifierNestedClazzStaticToNonStatic$NestedClazz (Classification: C2)
 Constructor: ModifierNestedClazzStaticToNonStatic$NestedClazz() (Not found) (Classification: M1) (Extension: binary+source Invocation: binary+source)
Class: testing_lib.otherClazzDelete.OtherClazzDelete (Not found) (Classification: C1) (Extension: source Invocation: binary+source)
Class: testing_lib.otherClazzToIfaze.ClazzToIfaze (Classification: C2)
 Invocation: class x interface (Incompatible) (Classification: C3b) (Extension: binary+source Invocation: binary)
 Modifier: public synchronized x public abstract interface (Added) (Classification: MOD) (Invocation: binary+source)
 Constructor: ClazzToIfaze() (Not found) (Classification: M1) (Extension: binary+source Invocation: binary+source)
Class: testing_lib.otherIfazeDelete.OtherIfazeDelete (Not found) (Classification: C1) (Extension: source Invocation: binary+source)
Class: testing_lib.otherIfazeToClass.IfazeToClass (Classification: C2)
 Invocation: interface x class (Incompatible) (Classification: C3b) (Extension: binary+source Invocation: binary)