<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<signature>
  <class modifiers="public" name="testing_lib.accessModifierClazzAccessDecrease.AccessModifierClazzAccessDecrease">
    <constructor modifiers="public"/>
  </class>
  <class name="testing_lib.accessModifierClazzAccessIncrease.AccessModifierClazzAccessIncrease">
    <constructor/>
  </class>
  <class modifiers="public" name="testing_lib.accessModifierClazzConstructorAccessDecrease.AccessModifierClazzConstructorAccessDecrease">
    <constructor modifiers="public"/>
    <constructor modifiers="public">
      <parameter type="int"/>
    </constructor>
    <constructor modifiers="public">
      <parameter type="int"/>
      <parameter type="int"/>
    </constructor>
    <constructor modifiers="protected">
      <parameter type="int"/>
      <parameter type="int"/>
      <parameter type="int"/>
    </constructor>
    <constructor modifiers="protected">
      <parameter type="int"/>
      <parameter type="int"/>
      <parameter type="int"/>
      <parameter type="int"/>
    </constructor>
    <constructor>
      <parameter type="int"/>
      <parameter type="int"/>
      <parameter type="int"/>
      <parameter type="int"/>
      <parameter type="int"/>
    </constructor>
  </class>
  <class modifiers="public" name="testing_lib.accessModifierClazzConstructorAccessIncrease.AccessModifierClazzConstructorAccessIncrease">
    <constructor modifiers="private"/>
    <constructor modifiers="private">
      <parameter type="int"/>
    </constructor>
    <constructor modifiers="private">
      <parameter type="int"/>
      <parameter type="int"/>
    </constructor>
    <constructor>
      <parameter type="int"/>
      <parameter type="int"/>
      <parameter type="int"/>
    </constructor>
    <constructor>
      <parameter type="int"/>
      <parameter type="int"/>
      <parameter type="int"/>
      <parameter type="int"/>
    </constructor>
    <constructor modifiers="protected">
      <parameter type="int"/>
      <parameter type="int"/>
      <parameter type="int"/>
      <parameter type="int"/>
      <parameter type="int"/>
    </constructor>
  </class>
  <class modifiers="public" name="testing_lib.accessModifierClazzFieldAccessDecrease.AccessModifierClazzFieldAccessDecrease">
    <constructor modifiers="public"/>
    <field modifiers="public" name="fieldPublicToProtected" type="java.lang.Integer"/>
    <field modifiers="public" name="fieldPublicToNon" type="java.lang.Integer"/>
    <field modifiers="public" name="fieldPublicToPrivate" type="java.lang.Integer"/>
    <field modifiers="protected" name="fieldProtectedToNon" type="java.lang.Integer"/>
    <field modifiers="protected" name="fieldProtectedToPrivate" type="java.lang.Integer"/>
    <field name="fieldNonToPrivate" type="java.lang.Integer"/>
  </class>
  <class modifiers="public" name="testing_lib.accessModifierClazzFieldAccessIncrease.AccessModifierClazzFieldAccessIncrease">
    <constructor modifiers="public"/>
    <field modifiers="private" name="fieldPrivateToNon" type="java.lang.Integer"/>
    <field modifiers="private" name="fieldPrivateToProtected" type="java.lang.Integer"/>
    <field modifiers="private" name="fieldPrivateToPublic" type="java.lang.Integer"/>
    <field name="fieldNonToProtected" type="java.lang.Integer"/>
    <field name="fieldNonToPublic" type="java.lang.Integer"/>
    <field modifiers="protected" name="fieldProtectedToPublic" type="java.lang.Integer"/>
  </class>
  <class modifiers="public" name="testing_lib.accessModifierClazzMethodAccessDecrease.AccessModifierClazzMethodAccessDecrease">
    <constructor modifiers="public"/>
    <method modifiers="public" name="methodPublicToProtected" return="void"/>
    <method modifiers="public" name="methodPublicToNon" return="void"/>
    <method modifiers="public" name="methodPublicToPrivate" return="void"/>
    <method modifiers="protected" name="methodProtectedToNon" return="void"/>
    <method modifiers="protected" name="methodProtectedToPrivate" return="void"/>
    <method name="methodNonToPrivate" return="void"/>
  </class>
  <class modifiers="public" name="testing_lib.accessModifierClazzMethodAccessIncrease.AccessModifierClazzMethodAccessIncrease">
    <constructor modifiers="public"/>
    <method modifiers="private" name="methodPrivateToNon" return="void"/>
    <method modifiers="private" name="methodPrivateToProtected" return="void"/>
    <method modifiers="private" name="methodPrivateToPublic" return="void"/>
    <method name="methodNonToProtected" return="void"/>
    <method name="methodNonToPublic" return="void"/>
    <method modifiers="protected" name="methodProtectedToPublic" return="void"/>
  </class>
  <class modifiers="public" name="testing_lib.accessModifierClazzNestedClazzAccessDecrease.AccessModifierClazzNestedClazzAccessDecrease">
    <constructor modifiers="public"/>
  </class>
  <class name="testing_lib.accessModifierClazzNestedClazzAccessDecrease.AccessModifierClazzNestedClazzAccessDecrease$ClazzNonToPrivate">
    <constructor>
      <parameter type="testing_lib.accessModifierClazzNestedClazzAccessDecrease.AccessModifierClazzNestedClazzAccessDecrease"/>
    </constructor>
    <field modifiers="final" name="this$0" type="testing_lib.accessModifierClazzNestedClazzAccessDecrease.AccessModifierClazzNestedClazzAccessDecrease"/>
  </class>
  <class modifiers="public" name="testing_lib.accessModifierClazzNestedClazzAccessDecrease.AccessModifierClazzNestedClazzAccessDecrease$ClazzProtectedToNon">
    <constructor modifiers="protected">
      <parameter type="testing_lib.accessModifierClazzNestedClazzAccessDecrease.AccessModifierClazzNestedClazzAccessDecrease"/>
    </constructor>
    <field modifiers="final" name="this$0" type="testing_lib.accessModifierClazzNestedClazzAccessDecrease.AccessModifierClazzNestedClazzAccessDecrease"/>
  </class>
  <class modifiers="public" name="testing_lib.accessModifierClazzNestedClazzAccessDecrease.AccessModifierClazzNestedClazzAccessDecrease$ClazzProtectedToPrivate">
    <constructor modifiers="protected">
      <parameter type="testing_lib.accessModifierClazzNestedClazzAccessDecrease.AccessModifierClazzNestedClazzAccessDecrease"/>
    </constructor>
    <field modifiers="final" name="this$0" type="testing_lib.accessModifierClazzNestedClazzAccessDecrease.AccessModifierClazzNestedClazzAccessDecrease"/>
  </class>
  <class modifiers="public" name="testing_lib.accessModifierClazzNestedClazzAccessDecrease.AccessModifierClazzNestedClazzAccessDecrease$ClazzPublicToNon">
    <constructor modifiers="public">
      <parameter type="testing_lib.accessModifierClazzNestedClazzAccessDecrease.AccessModifierClazzNestedClazzAccessDecrease"/>
    </constructor>
    <field modifiers="final" name="this$0" type="testing_lib.accessModifierClazzNestedClazzAccessDecrease.AccessModifierClazzNestedClazzAccessDecrease"/>
  </class>
  <class modifiers="public" name="testing_lib.accessModifierClazzNestedClazzAccessDecrease.AccessModifierClazzNestedClazzAccessDecrease$ClazzPublicToPrivate">
    <constructor modifiers="public">
      <parameter type="testing_lib.accessModifierClazzNestedClazzAccessDecrease.AccessModifierClazzNestedClazzAccessDecrease"/>
    </constructor>
    <field modifiers="final" name="this$0" type="testing_lib.accessModifierClazzNestedClazzAccessDecrease.AccessModifierClazzNestedClazzAccessDecrease"/>
  </class>
  <class modifiers="public" name="testing_lib.accessModifierClazzNestedClazzAccessDecrease.AccessModifierClazzNestedClazzAccessDecrease$ClazzPublicToProtected">
    <constructor modifiers="public">
      <parameter type="testing_lib.accessModifierClazzNestedClazzAccessDecrease.AccessModifierClazzNestedClazzAccessDecrease"/>
    </constructor>
    <field modifiers="final" name="this$0" type="testing_lib.accessModifierClazzNestedClazzAccessDecrease.AccessModifierClazzNestedClazzAccessDecrease"/>
  </class>
  <class modifiers="public" name="testing_lib.accessModifierClazzNestedClazzAccessIncrease.AccessModifierClazzNestedClazzAccessIncrease">
    <constructor modifiers="public"/>
  </class>
  <class name="testing_lib.accessModifierClazzNestedClazzAccessIncrease.AccessModifierClazzNestedClazzAccessIncrease$ClazzNonToProtected">
    <constructor>
      <parameter type="testing_lib.accessModifierClazzNestedClazzAccessIncrease.AccessModifierClazzNestedClazzAccessIncrease"/>
    </constructor>
    <field modifiers="final" name="this$0" type="testing_lib.accessModifierClazzNestedClazzAccessIncrease.AccessModifierClazzNestedClazzAccessIncrease"/>
  </class>
  <class name="testing_lib.accessModifierClazzNestedClazzAccessIncrease.AccessModifierClazzNestedClazzAccessIncrease$ClazzNonToPublic">
    <constructor>
      <parameter type="testing_lib.accessModifierClazzNestedClazzAccessIncrease.AccessModifierClazzNestedClazzAccessIncrease"/>
    </constructor>
    <field modifiers="final" name="this$0" type="testing_lib.accessModifierClazzNestedClazzAccessIncrease.AccessModifierClazzNestedClazzAccessIncrease"/>
  </class>
  <class name="testing_lib.accessModifierClazzNestedClazzAccessIncrease.AccessModifierClazzNestedClazzAccessIncrease$ClazzPrivateToNon">
    <constructor modifiers="private">
      <parameter type="testing_lib.accessModifierClazzNestedClazzAccessIncrease.AccessModifierClazzNestedClazzAccessIncrease"/>
    </constructor>
    <field modifiers="final" name="this$0" type="testing_lib.accessModifierClazzNestedClazzAccessIncrease.AccessModifierClazzNestedClazzAccessIncrease"/>
  </class>
  <class name="testing_lib.accessModifierClazzNestedClazzAccessIncrease.AccessModifierClazzNestedClazzAccessIncrease$ClazzPrivateToProtected">
    <constructor modifiers="private">
      <parameter type="testing_lib.accessModifierClazzNestedClazzAccessIncrease.AccessModifierClazzNestedClazzAccessIncrease"/>
    </constructor>
    <field modifiers="final" name="this$0" type="testing_lib.accessModifierClazzNestedClazzAccessIncrease.AccessModifierClazzNestedClazzAccessIncrease"/>
  </class>
  <class name="testing_lib.accessModifierClazzNestedClazzAccessIncrease.AccessModifierClazzNestedClazzAccessIncrease$ClazzPrivateToPublic">
    <constructor modifiers="private">
      <parameter type="testing_lib.accessModifierClazzNestedClazzAccessIncrease.AccessModifierClazzNestedClazzAccessIncrease"/>
    </constructor>
    <field modifiers="final" name="this$0" type="testing_lib.accessModifierClazzNestedClazzAccessIncrease.AccessModifierClazzNestedClazzAccessIncrease"/>
  </class>
  <class modifiers="public" name="testing_lib.accessModifierClazzNestedClazzAccessIncrease.AccessModifierClazzNestedClazzAccessIncrease$ClazzProtectedToPublic">
    <constructor modifiers="protected">
      <parameter type="testing_lib.accessModifierClazzNestedClazzAccessIncrease.AccessModifierClazzNestedClazzAccessIncrease"/>
    </constructor>
    <field modifiers="final" name="this$0" type="testing_lib.accessModifierClazzNestedClazzAccessIncrease.AccessModifierClazzNestedClazzAccessIncrease"/>
  </class>
  <interface modifiers="public" name="testing_lib.accessModifierIfazeFieldAccessDecrease.AccessModifierIfazeFieldAccessDecrease">
    <field modifiers="public static final" name="FIELD_PUBLIC_TO_NON" type="java.lang.Integer"/>
  </interface>
  <interface modifiers="public" name="testing_lib.accessModifierIfazeFieldAccessIncrease.AccessModifierIfazeFieldAccessIncrease">
    <field modifiers="public static final" name="FIELD_NON_TO_PUBLIC" type="java.lang.Integer"/>
  </interface>
  <interface modifiers="public" name="testing_lib.accessModifierIfazeMethodAccessDecrease.AccessModifierIfazeMethodAccessDecrease">
    <method modifiers="public abstract" name="methodPublicToNon" return="void"/>
  </interface>
  <interface modifiers="public" name="testing_lib.accessModifierIfazeMethodAccessIncrease.AccessModifierIfazeMethodAccessIncrease">
    <method modifiers="public abstract" name="methodPublicToNon" return="void"/>
  </interface>
  <class modifiers="public" name="testing_lib.dataTypeClazzConstructorParamBoxing.DataTypeClazzConstructorParamBoxing">
    <constructor modifiers="public">
      <parameter type="int"/>
    </constructor>
  </class>
  <class modifiers="public" name="testing_lib.dataTypeClazzConstructorParamGeneralization.DataTypeClazzConstructorParamGeneralization">
    <constructor modifiers="public">
      <parameter type="java.lang.Integer"/>
    </constructor>
  </class>
  <class modifiers="public" name="testing_lib.dataTypeClazzConstructorParamMutation.DataTypeClazzConstructorParamMutation">
    <constructor modifiers="public">
      <parameter type="java.lang.Integer"/>
    </constructor>
  </class>
  <class modifiers="public" name="testing_lib.dataTypeClazzConstructorParamNarrowing.DataTypeClazzConstructorParamNarrowing">
    <constructor modifiers="public">
      <parameter type="double"/>
    </constructor>
  </class>
  <class modifiers="public" name="testing_lib.dataTypeClazzConstructorParamSpecialization.DataTypeClazzConstructorParamSpecialization">
    <constructor modifiers="public">
      <parameter type="java.lang.Number"/>
    </constructor>
  </class>
  <class modifiers="public" name="testing_lib.dataTypeClazzConstructorParamUnboxing.DataTypeClazzConstructorParamUnboxing">
    <constructor modifiers="public">
      <parameter type="java.lang.Integer"/>
    </constructor>
  </class>
  <class modifiers="public" name="testing_lib.dataTypeClazzConstructorParamWidening.DataTypeClazzConstructorParamWidening">
    <constructor modifiers="public">
      <parameter type="int"/>
    </constructor>
  </class>
  <class modifiers="public" name="testing_lib.dataTypeClazzFieldBoxing.DataTypeClazzFieldBoxing">
    <constructor modifiers="public"/>
    <field modifiers="public" name="field1" type="int"/>
  </class>
  <class modifiers="public" name="testing_lib.dataTypeClazzFieldGeneralization.DataTypeClazzFieldGeneralization">
    <constructor modifiers="public"/>
    <field modifiers="public" name="field1" type="java.lang.Integer"/>
  </class>
  <class modifiers="public" name="testing_lib.dataTypeClazzFieldMutation.DataTypeClazzFieldMutation">
    <constructor modifiers="public"/>
    <field modifiers="public" name="field1" type="java.lang.Integer"/>
  </class>
  <class modifiers="public" name="testing_lib.dataTypeClazzFieldNarrowing.DataTypeClazzFieldNarrowing">
    <constructor modifiers="public"/>
    <field modifiers="public" name="field1" type="double"/>
  </class>
  <class modifiers="public" name="testing_lib.dataTypeClazzFieldSpecialization.DataTypeClazzFieldSpecialization">
    <constructor modifiers="public"/>
    <field modifiers="public" name="field1" type="java.lang.Number"/>
  </class>
  <class modifiers="public" name="testing_lib.dataTypeClazzFieldUnboxing.DataTypeClazzFieldUnboxing">
    <constructor modifiers="public"/>
    <field modifiers="public" name="field1" type="java.lang.Integer"/>
  </class>
  <class modifiers="public" name="testing_lib.dataTypeClazzFieldWidening.DataTypeClazzFieldWidening">
    <constructor modifiers="public"/>
    <field modifiers="public" name="field1" type="int"/>
  </class>
  <class modifiers="public" name="testing_lib.dataTypeClazzMethodParamBoxing.DataTypeClazzMethodParamBoxing">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void">
      <parameter type="int"/>
    </method>
  </class>
  <class modifiers="public" name="testing_lib.dataTypeClazzMethodParamGeneralization.DataTypeClazzMethodParamGeneralization">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void">
      <parameter type="java.lang.Integer"/>
    </method>
  </class>
  <class modifiers="public" name="testing_lib.dataTypeClazzMethodParamMutation.DataTypeClazzMethodParamMutation">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void">
      <parameter type="java.lang.Integer"/>
    </method>
  </class>
  <class modifiers="public" name="testing_lib.dataTypeClazzMethodParamNarrowing.DataTypeClazzMethodParamNarrowing">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void">
      <parameter type="double"/>
    </method>
  </class>
  <class modifiers="public" name="testing_lib.dataTypeClazzMethodParamSpecialization.DataTypeClazzMethodParamSpecialization">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void">
      <parameter type="java.lang.Number"/>
    </method>
  </class>
  <class modifiers="public" name="testing_lib.dataTypeClazzMethodParamUnboxing.DataTypeClazzMethodParamUnboxing">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void">
      <parameter type="java.lang.Integer"/>
    </method>
  </class>
  <class modifiers="public" name="testing_lib.dataTypeClazzMethodParamWidening.DataTypeClazzMethodParamWidening">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void">
      <parameter type="int"/>
    </method>
  </class>
  <class modifiers="public" name="testing_lib.dataTypeClazzMethodReturnTypeBoxing.DataTypeClazzMethodReturnTypeBoxing">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method" return="int"/>
  </class>
  <class modifiers="public" name="testing_lib.dataTypeClazzMethodReturnTypeGeneralization.DataTypeClazzMethodReturnTypeGeneralization">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method" return="java.lang.Integer"/>
  </class>
  <class modifiers="public" name="testing_lib.dataTypeClazzMethodReturnTypeMutation.DataTypeClazzMethodReturnTypeMutation">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method" return="java.lang.Integer"/>
  </class>
  <class modifiers="public" name="testing_lib.dataTypeClazzMethodReturnTypeNarrowing.DataTypeClazzMethodReturnTypeNarrowing">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method" return="double"/>
  </class>
  <class modifiers="public" name="testing_lib.dataTypeClazzMethodReturnTypeSpecialization.DataTypeClazzMethodReturnTypeSpecialization">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method" return="java.lang.Number"/>
  </class>
  <class modifiers="public" name="testing_lib.dataTypeClazzMethodReturnTypeUnboxing.DataTypeClazzMethodReturnTypeUnboxing">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method" return="java.lang.Integer"/>
  </class>
  <class modifiers="public" name="testing_lib.dataTypeClazzMethodReturnTypeWidening.DataTypeClazzMethodReturnTypeWidening">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method" return="int"/>
  </class>
  <interface modifiers="public" name="testing_lib.dataTypeIfazeConstantBoxing.DataTypeIfazeConstantBoxing">
    <field modifiers="public static final" name="FIELD1" type="java.lang.Integer"/>
  </interface>
  <interface modifiers="public" name="testing_lib.dataTypeIfazeConstantGeneralization.DataTypeIfazeConstantGeneralization">
    <field modifiers="public static final" name="FIELD1" type="java.lang.Integer"/>
  </interface>
  <interface modifiers="public" name="testing_lib.dataTypeIfazeConstantMutation.DataTypeIfazeConstantMutation">
    <field modifiers="public static final" name="FIELD1" type="java.lang.Integer"/>
  </interface>
  <interface modifiers="public" name="testing_lib.dataTypeIfazeConstantNarrowing.DataTypeIfazeConstantNarrowing">
    <field constant-value="5.0" modifiers="public static final" name="FIELD1" type="double"/>
  </interface>
  <interface modifiers="public" name="testing_lib.dataTypeIfazeConstantSpecialization.DataTypeIfazeConstantSpecialization">
    <field modifiers="public static final" name="FIELD1" type="java.lang.Number"/>
  </interface>
  <interface modifiers="public" name="testing_lib.dataTypeIfazeConstantUnboxing.DataTypeIfazeConstantUnboxing">
    <field modifiers="public static final" name="FIELD1" type="java.lang.Integer"/>
  </interface>
  <interface modifiers="public" name="testing_lib.dataTypeIfazeConstantWidening.DataTypeIfazeConstantWidening">
    <field constant-value="5" modifiers="public static final" name="FIELD1" type="int"/>
  </interface>
  <interface modifiers="public" name="testing_lib.dataTypeIfazeMethodParamBoxing.DataTypeIfazeMethodParamBoxing">
    <method modifiers="public abstract" name="method1" return="void">
      <parameter type="int"/>
    </method>
  </interface>
  <interface modifiers="public" name="testing_lib.dataTypeIfazeMethodParamGeneralization.DataTypeIfazeMethodParamGeneralization">
    <method modifiers="public abstract" name="method1" return="void">
      <parameter type="java.lang.Integer"/>
    </method>
  </interface>
  <interface modifiers="public" name="testing_lib.dataTypeIfazeMethodParamMutation.DataTypeIfazeMethodParamMutation">
    <method modifiers="public abstract" name="method1" return="void">
      <parameter type="java.lang.Integer"/>
    </method>
  </interface>
  <interface modifiers="public" name="testing_lib.dataTypeIfazeMethodParamNarrowing.DataTypeIfazeMethodParamNarrowing">
    <method modifiers="public abstract" name="method1" return="void">
      <parameter type="double"/>
    </method>
  </interface>
  <interface modifiers="public" name="testing_lib.dataTypeIfazeMethodParamSpecialization.DataTypeIfazeMethodParamSpecialization">
    <method modifiers="public abstract" name="method1" return="void">
      <parameter type="java.lang.Number"/>
    </method>
  </interface>
  <interface modifiers="public" name="testing_lib.dataTypeIfazeMethodParamUnboxing.DataTypeIfazeMethodParamUnboxing">
    <method modifiers="public abstract" name="method1" return="void">
      <parameter type="java.lang.Integer"/>
    </method>
  </interface>
  <interface modifiers="public" name="testing_lib.dataTypeIfazeMethodParamWidening.DataTypeIfazeMethodParamWidening">
    <method modifiers="public abstract" name="method1" return="void">
      <parameter type="int"/>
    </method>
  </interface>
  <interface modifiers="public" name="testing_lib.dataTypeIfazeMethodReturnTypeBoxing.DataTypeIfazeMethodReturnTypeBoxing">
    <method modifiers="public abstract" name="method1" return="int"/>
  </interface>
  <interface modifiers="public" name="testing_lib.dataTypeIfazeMethodReturnTypeGeneralization.DataTypeIfazeMethodReturnTypeGeneralization">
    <method modifiers="public abstract" name="method1" return="java.lang.Integer"/>
  </interface>
  <interface modifiers="public" name="testing_lib.dataTypeIfazeMethodReturnTypeMutation.DataTypeIfazeMethodReturnTypeMutation">
    <method modifiers="public abstract" name="methodVoidToInteger" return="void"/>
    <method modifiers="public abstract" name="methodIntegerToVoid" return="java.lang.Integer"/>
    <method modifiers="public abstract" name="methodIntegerToString" return="java.lang.Integer"/>
  </interface>
  <interface modifiers="public" name="testing_lib.dataTypeIfazeMethodReturnTypeNarrowing.DataTypeIfazeMethodReturnTypeNarrowing">
    <method modifiers="public abstract" name="method1" return="double"/>
  </interface>
  <interface modifiers="public" name="testing_lib.dataTypeIfazeMethodReturnTypeSpecialization.DataTypeIfazeMethodReturnTypeSpecialization">
    <method modifiers="public abstract" name="method1" return="java.lang.Number"/>
  </interface>
  <interface modifiers="public" name="testing_lib.dataTypeIfazeMethodReturnTypeUnboxing.DataTypeIfazeMethodReturnTypeUnboxing">
    <method modifiers="public abstract" name="method1" return="java.lang.Integer"/>
  </interface>
  <interface modifiers="public" name="testing_lib.dataTypeIfazeMethodReturnTypeWidening.DataTypeIfazeMethodReturnTypeWidening">
    <method modifiers="public abstract" name="method1" return="int"/>
  </interface>
  <class modifiers="public" name="testing_lib.exceptionClazzMethodCatchBlockAdd.ExceptionClazzMethodCatchBlockAdd">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void">
      <parameter type="java.io.File"/>
    </method>
  </class>
  <class modifiers="public" name="testing_lib.exceptionClazzMethodCatchBlockDelete.ExceptionClazzMethodCatchBlockDelete">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void">
      <parameter type="java.io.File"/>
    </method>
  </class>
  <class modifiers="public" name="testing_lib.exceptionClazzMethodFinallyBlockAdd.ExceptionClazzMethodFinallyBlockAdd">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void">
      <parameter type="java.io.File"/>
    </method>
  </class>
  <class modifiers="public" name="testing_lib.exceptionClazzMethodFinallyBlockDelete.ExceptionClazzMethodFinallyBlockDelete">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void">
      <parameter type="java.io.File"/>
    </method>
  </class>
  <class modifiers="public" name="testing_lib.exceptionClazzMethodThrowCheckedAdd.ExceptionClazzMethodThrowCheckedAdd">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void"/>
  </class>
  <class modifiers="public" name="testing_lib.exceptionClazzMethodThrowCheckedDelete.ExceptionClazzMethodThrowCheckedDelete">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void">
      <exception name="java.io.IOException"/>
    </method>
  </class>
  <class modifiers="public" name="testing_lib.exceptionClazzMethodThrowCheckedGeneralization.ExceptionClazzMethodThrowCheckedGeneralization">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void">
      <exception name="java.io.FileNotFoundException"/>
    </method>
  </class>
  <class modifiers="public" name="testing_lib.exceptionClazzMethodThrowCheckedMutation.ExceptionClazzMethodThrowCheckedMutation">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void">
      <exception name="java.io.FileNotFoundException"/>
    </method>
  </class>
  <class modifiers="public" name="testing_lib.exceptionClazzMethodThrowCheckedSpecialization.ExceptionClazzMethodThrowCheckedSpecialization">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void">
      <exception name="java.io.IOException"/>
    </method>
  </class>
  <class modifiers="public" name="testing_lib.exceptionClazzMethodThrowCheckedToTryCatch.ExceptionClazzMethodThrowCheckedToTryCatch">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void">
      <exception name="java.io.IOException"/>
      <parameter type="java.io.File"/>
    </method>
  </class>
  <class modifiers="public" name="testing_lib.exceptionClazzMethodThrowUncheckedAdd.ExceptionClazzMethodThrowUncheckedAdd">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void"/>
  </class>
  <class modifiers="public" name="testing_lib.exceptionClazzMethodThrowUncheckedDelete.ExceptionClazzMethodThrowUncheckedDelete">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void">
      <exception name="java.lang.NullPointerException"/>
    </method>
  </class>
  <class modifiers="public" name="testing_lib.exceptionClazzMethodThrowUncheckedGeneralization.ExceptionClazzMethodThrowUncheckedGeneralization">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void">
      <exception name="java.lang.NullPointerException"/>
    </method>
  </class>
  <class modifiers="public" name="testing_lib.exceptionClazzMethodThrowUncheckedMutation.ExceptionClazzMethodThrowUncheckedMutation">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void">
      <exception name="java.lang.NullPointerException"/>
    </method>
  </class>
  <class modifiers="public" name="testing_lib.exceptionClazzMethodThrowUncheckedSpecialization.ExceptionClazzMethodThrowUncheckedSpecialization">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void">
      <exception name="java.lang.RuntimeException"/>
    </method>
  </class>
  <class modifiers="public" name="testing_lib.exceptionClazzMethodTryCatchToThrowChecked.ExceptionClazzMethodTryCatchToThrowChecked">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void">
      <parameter type="java.io.File"/>
    </method>
  </class>
  <interface modifiers="public" name="testing_lib.exceptionIfazeMethodThrowCheckedAdd.ExceptionIfazeMethodThrowCheckedAdd">
    <method modifiers="public abstract" name="method1" return="void"/>
  </interface>
  <interface modifiers="public" name="testing_lib.exceptionIfazeMethodThrowCheckedDelete.ExceptionIfazeMethodThrowCheckedDelete">
    <method modifiers="public abstract" name="method1" return="void">
      <exception name="java.io.IOException"/>
    </method>
  </interface>
  <interface modifiers="public" name="testing_lib.exceptionIfazeMethodThrowCheckedGeneralization.ExceptionIfazeMethodThrowCheckedGeneralization">
    <method modifiers="public abstract" name="method1" return="void">
      <exception name="java.io.FileNotFoundException"/>
    </method>
  </interface>
  <interface modifiers="public" name="testing_lib.exceptionIfazeMethodThrowCheckedMutation.ExceptionIfazeMethodThrowCheckedMutation">
    <method modifiers="public abstract" name="method1" return="void">
      <exception name="java.io.FileNotFoundException"/>
    </method>
  </interface>
  <interface modifiers="public" name="testing_lib.exceptionIfazeMethodThrowCheckedSpecialization.ExceptionIfazeMethodThrowCheckedSpecialization">
    <method modifiers="public abstract" name="method1" return="void">
      <exception name="java.io.IOException"/>
    </method>
  </interface>
  <interface modifiers="public" name="testing_lib.exceptionIfazeMethodThrowUncheckedAdd.ExceptionIfazeMethodThrowUncheckedAdd">
    <method modifiers="public abstract" name="method1" return="void"/>
  </interface>
  <interface modifiers="public" name="testing_lib.exceptionIfazeMethodThrowUncheckedDelete.ExceptionIfazeMethodThrowUncheckedDelete">
    <method modifiers="public abstract" name="method1" return="void">
      <exception name="java.lang.NullPointerException"/>
    </method>
  </interface>
  <interface modifiers="public" name="testing_lib.exceptionIfazeMethodThrowUncheckedGeneralization.ExceptionIfazeMethodThrowUncheckedGeneralization">
    <method modifiers="public abstract" name="method1" return="void">
      <exception name="java.lang.NullPointerException"/>
    </method>
  </interface>
  <interface modifiers="public" name="testing_lib.exceptionIfazeMethodThrowUncheckedMutation.ExceptionIfazeMethodThrowUncheckedMutation">
    <method modifiers="public abstract" name="method1" return="void">
      <exception name="java.lang.NullPointerException"/>
    </method>
  </interface>
  <interface modifiers="public" name="testing_lib.exceptionIfazeMethodThrowUncheckedSpecialization.ExceptionIfazeMethodThrowUncheckedSpecialization">
    <method modifiers="public abstract" name="method1" return="void">
      <exception name="java.lang.RuntimeException"/>
    </method>
  </interface>
  <class modifiers="public" name="testing_lib.genericsClazzConstructorTypeAdd.GenericsClazzConstructorTypeAdd">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public" name="testing_lib.genericsClazzConstructorTypeAddSecond.GenericsClazzConstructorTypeAddSecond">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public" name="testing_lib.genericsClazzConstructorTypeBoundsAdd.GenericsClazzConstructorTypeBoundsAdd">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public" name="testing_lib.genericsClazzConstructorTypeBoundsAddSecond.GenericsClazzConstructorTypeBoundsAddSecond">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public" name="testing_lib.genericsClazzConstructorTypeBoundsDelete.GenericsClazzConstructorTypeBoundsDelete">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public" name="testing_lib.genericsClazzConstructorTypeBoundsDeleteSecond.GenericsClazzConstructorTypeBoundsDeleteSecond">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public" name="testing_lib.genericsClazzConstructorTypeBoundsGeneralization.GenericsClazzConstructorTypeBoundsGeneralization">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public" name="testing_lib.genericsClazzConstructorTypeBoundsMutation.GenericsClazzConstructorTypeBoundsMutation">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public" name="testing_lib.genericsClazzConstructorTypeBoundsSpecialization.GenericsClazzConstructorTypeBoundsSpecialization">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public" name="testing_lib.genericsClazzConstructorTypeDelete.GenericsClazzConstructorTypeDelete">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public" name="testing_lib.genericsClazzConstructorTypeDeleteSecond.GenericsClazzConstructorTypeDeleteSecond">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public" name="testing_lib.genericsClazzConstructorTypeSwap.GenericsClazzConstructorTypeSwap">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public" name="testing_lib.genericsClazzMethodTypeAdd.GenericsClazzMethodTypeAdd">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void"/>
  </class>
  <class modifiers="public" name="testing_lib.genericsClazzMethodTypeAddSecond.GenericsClazzMethodTypeAddSecond">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void"/>
  </class>
  <class modifiers="public" name="testing_lib.genericsClazzMethodTypeBoundsAdd.GenericsClazzMethodTypeBoundsAdd">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void"/>
  </class>
  <class modifiers="public" name="testing_lib.genericsClazzMethodTypeBoundsAddSecond.GenericsClazzMethodTypeBoundsAddSecond">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void"/>
  </class>
  <class modifiers="public" name="testing_lib.genericsClazzMethodTypeBoundsDelete.GenericsClazzMethodTypeBoundsDelete">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void"/>
  </class>
  <class modifiers="public" name="testing_lib.genericsClazzMethodTypeBoundsDeleteSecond.GenericsClazzMethodTypeBoundsDeleteSecond">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void"/>
  </class>
  <class modifiers="public" name="testing_lib.genericsClazzMethodTypeBoundsGeneralization.GenericsClazzMethodTypeBoundsGeneralization">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void"/>
  </class>
  <class modifiers="public" name="testing_lib.genericsClazzMethodTypeBoundsMutation.GenericsClazzMethodTypeBoundsMutation">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void"/>
  </class>
  <class modifiers="public" name="testing_lib.genericsClazzMethodTypeBoundsSpecialization.GenericsClazzMethodTypeBoundsSpecialization">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void"/>
  </class>
  <class modifiers="public" name="testing_lib.genericsClazzMethodTypeDelete.GenericsClazzMethodTypeDelete">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void"/>
  </class>
  <class modifiers="public" name="testing_lib.genericsClazzMethodTypeDeleteSecond.GenericsClazzMethodTypeDeleteSecond">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void"/>
  </class>
  <class modifiers="public" name="testing_lib.genericsClazzMethodTypeSwap.GenericsClazzMethodTypeSwap">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void"/>
  </class>
  <class modifiers="public" name="testing_lib.genericsClazzTypeAdd.GenericsClazzTypeAdd">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public" name="testing_lib.genericsClazzTypeAddSecond.GenericsClazzTypeAddSecond">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public" name="testing_lib.genericsClazzTypeBoundsAdd.GenericsClazzTypeBoundsAdd">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public" name="testing_lib.genericsClazzTypeBoundsAddSecond.GenericsClazzTypeBoundsAddSecond">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public" name="testing_lib.genericsClazzTypeBoundsDelete.GenericsClazzTypeBoundsDelete">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public" name="testing_lib.genericsClazzTypeBoundsDeleteSecond.GenericsClazzTypeBoundsDeleteSecond">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public" name="testing_lib.genericsClazzTypeBoundsGeneralization.GenericsClazzTypeBoundsGeneralization">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public" name="testing_lib.genericsClazzTypeBoundsMutation.GenericsClazzTypeBoundsMutation">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public" name="testing_lib.genericsClazzTypeBoundsSpecialization.GenericsClazzTypeBoundsSpecialization">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public" name="testing_lib.genericsClazzTypeDelete.GenericsClazzTypeDelete">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public" name="testing_lib.genericsClazzTypeDeleteSecond.GenericsClazzTypeDeleteSecond">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public" name="testing_lib.genericsClazzTypeSwap.GenericsClazzTypeSwap">
    <constructor modifiers="public"/>
  </class>
  <interface modifiers="public" name="testing_lib.genericsIfazeMethodTypeAdd.GenericsIfazeMethodTypeAdd">
    <method modifiers="public abstract" name="method1" return="void"/>
  </interface>
  <interface modifiers="public" name="testing_lib.genericsIfazeMethodTypeAddSecond.GenericsIfazeMethodTypeAddSecond">
    <method modifiers="public abstract" name="method1" return="void"/>
  </interface>
  <interface modifiers="public" name="testing_lib.genericsIfazeMethodTypeBoundsAdd.GenericsIfazeMethodTypeBoundsAdd">
    <method modifiers="public abstract" name="method1" return="void"/>
  </interface>
  <interface modifiers="public" name="testing_lib.genericsIfazeMethodTypeBoundsAddSecond.GenericsIfazeMethodTypeBoundsAddSecond">
    <method modifiers="public abstract" name="method1" return="void"/>
  </interface>
  <interface modifiers="public" name="testing_lib.genericsIfazeMethodTypeBoundsDelete.GenericsIfazeMethodTypeBoundsDelete">
    <method modifiers="public abstract" name="method1" return="void"/>
  </interface>
  <interface modifiers="public" name="testing_lib.genericsIfazeMethodTypeBoundsDeleteSecond.GenericsIfazeMethodTypeBoundsDeleteSecond">
    <method modifiers="public abstract" name="method1" return="void"/>
  </interface>
  <interface modifiers="public" name="testing_lib.genericsIfazeMethodTypeBoundsGeneralization.GenericsIfazeMethodTypeBoundsGeneralization">
    <method modifiers="public abstract" name="method1" return="void"/>
  </interface>
  <interface modifiers="public" name="testing_lib.genericsIfazeMethodTypeBoundsMutation.GenericsIfazeMethodTypeBoundsMutation">
    <method modifiers="public abstract" name="method1" return="void"/>
  </interface>
  <interface modifiers="public" name="testing_lib.genericsIfazeMethodTypeBoundsSpecialization.GenericsIfazeMethodTypeBoundsSpecialization">
    <method modifiers="public abstract" name="method1" return="void"/>
  </interface>
  <interface modifiers="public" name="testing_lib.genericsIfazeMethodTypeDelete.GenericsIfazeMethodTypeDelete">
    <method modifiers="public abstract" name="method1" return="void"/>
  </interface>
  <interface modifiers="public" name="testing_lib.genericsIfazeMethodTypeDeleteSecond.GenericsIfazeMethodTypeDeleteSecond">
    <method modifiers="public abstract" name="method1" return="void"/>
  </interface>
  <interface modifiers="public" name="testing_lib.genericsIfazeMethodTypeSwap.GenericsIfazeMethodTypeSwap">
    <method modifiers="public abstract" name="method1" return="void"/>
  </interface>
  <interface modifiers="public" name="testing_lib.genericsIfazeTypeAdd.GenericsIfazeTypeAdd"/>
  <interface modifiers="public" name="testing_lib.genericsIfazeTypeAddSecond.GenericsIfazeTypeAddSecond"/>
  <interface modifiers="public" name="testing_lib.genericsIfazeTypeBoundsAdd.GenericsIfazeTypeBoundsAdd"/>
  <interface modifiers="public" name="testing_lib.genericsIfazeTypeBoundsAddSecond.GenericsIfazeTypeBoundsAddSecond"/>
  <interface modifiers="public" name="testing_lib.genericsIfazeTypeBoundsDelete.GenericsIfazeTypeBoundsDelete"/>
  <interface modifiers="public" name="testing_lib.genericsIfazeTypeBoundsDeleteSecond.GenericsIfazeTypeBoundsDeleteSecond"/>
  <interface modifiers="public" name="testing_lib.genericsIfazeTypeBoundsGeneralization.GenericsIfazeTypeBoundsGeneralization"/>
  <interface modifiers="public" name="testing_lib.genericsIfazeTypeBoundsMutation.GenericsIfazeTypeBoundsMutation"/>
  <interface modifiers="public" name="testing_lib.genericsIfazeTypeBoundsSpecialization.GenericsIfazeTypeBoundsSpecialization"/>
  <interface modifiers="public" name="testing_lib.genericsIfazeTypeDelete.GenericsIfazeTypeDelete"/>
  <interface modifiers="public" name="testing_lib.genericsIfazeTypeDeleteSecond.GenericsIfazeTypeDeleteSecond"/>
  <interface modifiers="public" name="testing_lib.genericsIfazeTypeSwap.GenericsIfazeTypeSwap"/>
  <class modifiers="public" name="testing_lib.genericsWildcardsClazzConstructorParamAdd.GenericsWildcardsClazzConstructorParamAdd">
    <constructor modifiers="public">
      <parameter type="java.util.ArrayList"/>
    </constructor>
  </class>
  <class modifiers="public" name="testing_lib.genericsWildcardsClazzConstructorParamDelete.GenericsWildcardsClazzConstructorParamDelete">
    <constructor modifiers="public">
      <parameter type="java.util.ArrayList"/>
    </constructor>
  </class>
  <class modifiers="public" name="testing_lib.genericsWildcardsClazzConstructorParamLowerBoundsAdd.GenericsWildcardsClazzConstructorParamLowerBoundsAdd">
    <constructor modifiers="public">
      <parameter type="java.util.ArrayList"/>
    </constructor>
  </class>
  <class modifiers="public" name="testing_lib.genericsWildcardsClazzConstructorParamLowerBoundsDelete.GenericsWildcardsClazzConstructorParamLowerBoundsDelete">
    <constructor modifiers="public">
      <parameter type="java.util.ArrayList"/>
    </constructor>
  </class>
  <class modifiers="public" name="testing_lib.genericsWildcardsClazzConstructorParamLowerBoundsGeneralization.GenericsWildcardsClazzConstructorParamLowerBoundsGeneralization">
    <constructor modifiers="public">
      <parameter type="java.util.ArrayList"/>
    </constructor>
  </class>
  <class modifiers="public" name="testing_lib.genericsWildcardsClazzConstructorParamLowerBoundsMutation.GenericsWildcardsClazzConstructorParamLowerBoundsMutation">
    <constructor modifiers="public">
      <parameter type="java.util.ArrayList"/>
    </constructor>
  </class>
  <class modifiers="public" name="testing_lib.genericsWildcardsClazzConstructorParamLowerBoundsSpecialization.GenericsWildcardsClazzConstructorParamLowerBoundsSpecializaion">
    <constructor modifiers="public">
      <parameter type="java.util.ArrayList"/>
    </constructor>
  </class>
  <class modifiers="public" name="testing_lib.genericsWildcardsClazzConstructorParamLowerBoundsToUpperBounds.GenericsWildcardsClazzConstructorParamLowerBoundsToUpperBounds">
    <constructor modifiers="public">
      <parameter type="java.util.ArrayList"/>
    </constructor>
  </class>
  <class modifiers="public" name="testing_lib.genericsWildcardsClazzConstructorParamUpperBoundsAdd.GenericsWildcardsClazzConstructorParamUpperBoundsAdd">
    <constructor modifiers="public">
      <parameter type="java.util.ArrayList"/>
    </constructor>
  </class>
  <class modifiers="public" name="testing_lib.genericsWildcardsClazzConstructorParamUpperBoundsDelete.GenericsWildcardsClazzConstructorParamUpperBoundsDelete">
    <constructor modifiers="public">
      <parameter type="java.util.ArrayList"/>
    </constructor>
  </class>
  <class modifiers="public" name="testing_lib.genericsWildcardsClazzConstructorParamUpperBoundsGeneralization.GenericsWildcardsClazzConstructorParamUpperBoundsGeneralization">
    <constructor modifiers="public">
      <parameter type="java.util.ArrayList"/>
    </constructor>
  </class>
  <class modifiers="public" name="testing_lib.genericsWildcardsClazzConstructorParamUpperBoundsMutation.GenericsWildcardsClazzConstructorParamUpperBoundsMutation">
    <constructor modifiers="public">
      <parameter type="java.util.ArrayList"/>
    </constructor>
  </class>
  <class modifiers="public" name="testing_lib.genericsWildcardsClazzConstructorParamUpperBoundsSpecialization.GenericsWildcardsClazzConstructorParamUpperBoundsSpecialization">
    <constructor modifiers="public">
      <parameter type="java.util.ArrayList"/>
    </constructor>
  </class>
  <class modifiers="public" name="testing_lib.genericsWildcardsClazzConstructorParamUpperBoundsToLowerBounds.GenericsWildcardsClazzConstructorParamUpperBoundsToLowerBounds">
    <constructor modifiers="public">
      <parameter type="java.util.ArrayList"/>
    </constructor>
  </class>
  <class modifiers="public" name="testing_lib.genericsWildcardsClazzMethodParamAdd.GenericsWildcardsClazzMethodParamAdd">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void">
      <parameter type="java.util.ArrayList"/>
    </method>
  </class>
  <class modifiers="public" name="testing_lib.genericsWildcardsClazzMethodParamDelete.GenericsWildcardsClazzMethodParamDelete">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void">
      <parameter type="java.util.ArrayList"/>
    </method>
  </class>
  <class modifiers="public" name="testing_lib.genericsWildcardsClazzMethodParamLowerBoundsAdd.GenericsWildcardsClazzMethodParamLowerBoundsAdd">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void">
      <parameter type="java.util.ArrayList"/>
    </method>
  </class>
  <class modifiers="public" name="testing_lib.genericsWildcardsClazzMethodParamLowerBoundsDelete.GenericsWildcardsClazzMethodParamLowerBoundsDelete">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void">
      <parameter type="java.util.ArrayList"/>
    </method>
  </class>
  <class modifiers="public" name="testing_lib.genericsWildcardsClazzMethodParamLowerBoundsGeneralization.GenericsWildcardsClazzMethodParamLowerBoundsGeneralization">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void">
      <parameter type="java.util.ArrayList"/>
    </method>
  </class>
  <class modifiers="public" name="testing_lib.genericsWildcardsClazzMethodParamLowerBoundsMutation.GenericsWildcardsClazzMethodParamLowerBoundsMutation">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void">
      <parameter type="java.util.ArrayList"/>
    </method>
  </class>
  <class modifiers="public" name="testing_lib.genericsWildcardsClazzMethodParamLowerBoundsSpecialization.GenericsWildcardsClazzMethodParamLowerBoundsSpecialization">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void">
      <parameter type="java.util.ArrayList"/>
    </method>
  </class>
  <class modifiers="public" name="testing_lib.genericsWildcardsClazzMethodParamLowerBoundsToUpperBounds.GenericsWildcardsClazzMethodParamLowerBoundsToUpperBounds">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void">
      <parameter type="java.util.ArrayList"/>
    </method>
  </class>
  <class modifiers="public" name="testing_lib.genericsWildcardsClazzMethodParamUpperBoundsAdd.GenericsWildcardsClazzMethodParamUpperBoundsAdd">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void">
      <parameter type="java.util.ArrayList"/>
    </method>
  </class>
  <class modifiers="public" name="testing_lib.genericsWildcardsClazzMethodParamUpperBoundsDelete.GenericsWildcardsClazzMethodParamUpperBoundsDelete">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void">
      <parameter type="java.util.ArrayList"/>
    </method>
  </class>
  <class modifiers="public" name="testing_lib.genericsWildcardsClazzMethodParamUpperBoundsGeneralization.GenericsWildcardsClazzMethodParamUpperBoundsGeneralization">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void">
      <parameter type="java.util.ArrayList"/>
    </method>
  </class>
  <class modifiers="public" name="testing_lib.genericsWildcardsClazzMethodParamUpperBoundsMutation.GenericsWildcardsClazzMethodParamUpperBoundsMutation">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void">
      <parameter type="java.util.ArrayList"/>
    </method>
  </class>
  <class modifiers="public" name="testing_lib.genericsWildcardsClazzMethodParamUpperBoundsSpecialization.GenericsWildcardsClazzMethodParamUpperBoundsSpecialization">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void">
      <parameter type="java.util.ArrayList"/>
    </method>
  </class>
  <class modifiers="public" name="testing_lib.genericsWildcardsClazzMethodParamUpperBoundsToLowerBounds.GenericsWildcardsClazzMethodParamUpperBoundsToLowerBounds">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void">
      <parameter type="java.util.ArrayList"/>
    </method>
  </class>
  <class modifiers="public" name="testing_lib.inheritanceClazzContractSuperClassSet.Clazz1">
    <constructor modifiers="public"/>
    <method modifiers="public" name="printClazz1" return="void"/>
  </class>
  <class extends="testing_lib.inheritanceClazzContractSuperClassSet.Clazz1" modifiers="public" name="testing_lib.inheritanceClazzContractSuperClassSet.Clazz2">
    <constructor modifiers="public"/>
    <method modifiers="public" name="printClazz2" return="void"/>
  </class>
  <class extends="testing_lib.inheritanceClazzContractSuperClassSet.Clazz2" modifiers="public" name="testing_lib.inheritanceClazzContractSuperClassSet.InheritanceClazzContractSuperInterfaceSet">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public" name="testing_lib.inheritanceClazzExpandSuperClassSet.Clazz1">
    <constructor modifiers="public"/>
    <method modifiers="public" name="printClazz1" return="void"/>
  </class>
  <class extends="testing_lib.inheritanceClazzExpandSuperClassSet.Clazz1" modifiers="public" name="testing_lib.inheritanceClazzExpandSuperClassSet.InheritanceClazzExpandSuperClassSet">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public" name="testing_lib.inheritanceClazzMethodMovedFromSuperClass.Clazz1">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void"/>
  </class>
  <class extends="testing_lib.inheritanceClazzMethodMovedFromSuperClass.Clazz1" modifiers="public" name="testing_lib.inheritanceClazzMethodMovedFromSuperClass.InheritanceClazzMethodMovedFromSuperClass">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public" name="testing_lib.inheritanceClazzMethodMovedToSuperClass.Clazz1">
    <constructor modifiers="public"/>
  </class>
  <class extends="testing_lib.inheritanceClazzMethodMovedToSuperClass.Clazz1" modifiers="public" name="testing_lib.inheritanceClazzMethodMovedToSuperClass.InheritanceClazzMethodMovedToSuperClass">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void"/>
  </class>
  <class modifiers="public" name="testing_lib.inheritanceClazzMethodOverrideAdd.Clazz1">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void"/>
  </class>
  <class extends="testing_lib.inheritanceClazzMethodOverrideAdd.Clazz1" modifiers="public" name="testing_lib.inheritanceClazzMethodOverrideAdd.InheritanceClazzMethodOverrideAdd">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public" name="testing_lib.inheritanceClazzMethodOverrideDelete.Clazz1">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void"/>
  </class>
  <class extends="testing_lib.inheritanceClazzMethodOverrideDelete.Clazz1" modifiers="public" name="testing_lib.inheritanceClazzMethodOverrideDelete.InheritanceClazzMethodOverrideDelete">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void"/>
  </class>
  <class modifiers="public" name="testing_lib.inheritanceClazzStartInherite.Clazz1">
    <constructor modifiers="public"/>
    <method modifiers="public" name="methodClazz1" return="void"/>
  </class>
  <class modifiers="public" name="testing_lib.inheritanceClazzStartInherite.InheritanceClazzStartInherite">
    <constructor modifiers="public"/>
    <method modifiers="public" name="methodClazzTest" return="void"/>
  </class>
  <class modifiers="public" name="testing_lib.inheritanceClazzStopInherite.Clazz1">
    <constructor modifiers="public"/>
    <method modifiers="public" name="methodClazz1" return="void"/>
  </class>
  <class extends="testing_lib.inheritanceClazzStopInherite.Clazz1" modifiers="public" name="testing_lib.inheritanceClazzStopInherite.InheritanceClazzStopInherite">
    <constructor modifiers="public"/>
    <method modifiers="public" name="methodClazzTest" return="void"/>
  </class>
  <interface modifiers="public" name="testing_lib.inheritanceIfazeContractSuperinterfaceSet.InheritanceIfazeContractSuperinterfaceSet">
    <implements>
      <interface name="testing_lib.inheritanceIfazeContractSuperinterfaceSet.Interface2"/>
    </implements>
  </interface>
  <interface modifiers="public" name="testing_lib.inheritanceIfazeContractSuperinterfaceSet.Interface1">
    <method modifiers="public abstract" name="ifaze1method1" return="void"/>
  </interface>
  <interface modifiers="public" name="testing_lib.inheritanceIfazeContractSuperinterfaceSet.Interface2">
    <implements>
      <interface name="testing_lib.inheritanceIfazeContractSuperinterfaceSet.Interface1"/>
    </implements>
    <method modifiers="public abstract" name="ifaze2method1" return="void"/>
  </interface>
  <interface modifiers="public" name="testing_lib.inheritanceIfazeExpandSuperinterfaceSet.InheritanceIfazeExpandSuperinterfaceSet">
    <implements>
      <interface name="testing_lib.inheritanceIfazeExpandSuperinterfaceSet.Interface1"/>
    </implements>
  </interface>
  <interface modifiers="public" name="testing_lib.inheritanceIfazeExpandSuperinterfaceSet.Interface1">
    <method modifiers="public abstract" name="ifaze1method1" return="void"/>
  </interface>
  <interface modifiers="public" name="testing_lib.inheritanceIfazeMethodMovedFromSuperInterface.InheritanceIfazeMethodMovedFromSuperInterface">
    <implements>
      <interface name="testing_lib.inheritanceIfazeMethodMovedFromSuperInterface.Interface1"/>
    </implements>
  </interface>
  <interface modifiers="public" name="testing_lib.inheritanceIfazeMethodMovedFromSuperInterface.Interface1">
    <method modifiers="public abstract" name="method1" return="void"/>
  </interface>
  <interface modifiers="public" name="testing_lib.inheritanceIfazeMethodMovedToSuperInterface.InheritanceIfazeMethodMovedToSuperInterface">
    <implements>
      <interface name="testing_lib.inheritanceIfazeMethodMovedToSuperInterface.Interface1"/>
    </implements>
    <method modifiers="public abstract" name="method1" return="void"/>
  </interface>
  <interface modifiers="public" name="testing_lib.inheritanceIfazeMethodMovedToSuperInterface.Interface1"/>
  <interface modifiers="public" name="testing_lib.inheritanceIfazeStartInherite.InheritanceIfazeStartInherite"/>
  <interface modifiers="public" name="testing_lib.inheritanceIfazeStartInherite.Interface1">
    <method modifiers="public abstract" name="method1" return="void"/>
  </interface>
  <interface modifiers="public" name="testing_lib.inheritanceIfazeStopInherite.InheritanceIfazeStopInherite">
    <implements>
      <interface name="testing_lib.inheritanceIfazeStopInherite.Interface1"/>
    </implements>
  </interface>
  <interface modifiers="public" name="testing_lib.inheritanceIfazeStopInherite.Interface1">
    <method modifiers="public abstract" name="method1" return="void"/>
  </interface>
  <class modifiers="public" name="testing_lib.membersClazzConstructorAdd.MembersClazzConstructorAdd">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public" name="testing_lib.membersClazzConstructorDelete.MembersClazzConstructorDelete">
    <constructor modifiers="public"/>
    <constructor modifiers="public">
      <parameter type="int"/>
    </constructor>
  </class>
  <class modifiers="public" name="testing_lib.membersClazzConstructorParamAdd.MembersClazzConstructorParamAdd">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public" name="testing_lib.membersClazzConstructorParamDelete.MembersClazzConstructorParamDelete">
    <constructor modifiers="public">
      <parameter type="java.lang.Integer"/>
    </constructor>
  </class>
  <class modifiers="public" name="testing_lib.membersClazzFieldAdd.MembersClazzFieldAdd">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public" name="testing_lib.membersClazzFieldConstantAdd.MembersClazzFieldConstantAdd">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public" name="testing_lib.membersClazzFieldConstantDelete.MembersClazzFieldConstantDelete">
    <constructor modifiers="public"/>
    <field constant-value="5" modifiers="public static final" name="FIELD" type="int"/>
  </class>
  <class modifiers="public" name="testing_lib.membersClazzFieldDelete.MembersClazzFieldDelete">
    <constructor modifiers="public"/>
    <field modifiers="public" name="field" type="int"/>
  </class>
  <class modifiers="public abstract" name="testing_lib.membersClazzMethodAbstractAdd.MembersClazzMethodAbstractAdd">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public abstract" name="testing_lib.membersClazzMethodAbstractDelete.MembersClazzMethodAbstractDelete">
    <constructor modifiers="public"/>
    <method modifiers="public abstract" name="method1" return="void"/>
  </class>
  <class modifiers="public" name="testing_lib.membersClazzMethodAdd.MembersClazzMethodAdd">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public" name="testing_lib.membersClazzMethodDelete.MembersClazzMethodDelete">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void"/>
  </class>
  <class modifiers="public" name="testing_lib.membersClazzMethodParamAdd.MembersClazzMethodParamAdd">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void"/>
  </class>
  <class modifiers="public" name="testing_lib.membersClazzMethodParamDelete.MembersClazzMethodParamDelete">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void">
      <parameter type="java.lang.Integer"/>
    </method>
  </class>
  <class modifiers="public" name="testing_lib.membersClazzNestedClazzAdd.MembersClazzNestedClazzAdd">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public" name="testing_lib.membersClazzNestedClazzDelete.MembersClazzNestedClazzDelete">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public" name="testing_lib.membersClazzNestedClazzDelete.MembersClazzNestedClazzDelete$NestedClazz">
    <constructor modifiers="public">
      <parameter type="testing_lib.membersClazzNestedClazzDelete.MembersClazzNestedClazzDelete"/>
    </constructor>
    <field modifiers="final" name="this$0" type="testing_lib.membersClazzNestedClazzDelete.MembersClazzNestedClazzDelete"/>
  </class>
  <class modifiers="public" name="testing_lib.membersClazzNestedIfazeAdd.MembersClazzNestedIfazeAdd">
    <constructor modifiers="public"/>
  </class>
  <interface modifiers="public" name="testing_lib.membersIfazeConstantAdd.MembersIfazeConstantAdd"/>
  <interface modifiers="public" name="testing_lib.membersIfazeConstantDelete.MembersIfazeConstantDelete">
    <field modifiers="public static final" name="FIELD" type="java.lang.Integer"/>
  </interface>
  <interface modifiers="public" name="testing_lib.membersIfazeMethodAdd.MembersIfazeMethodAdd"/>
  <interface modifiers="public" name="testing_lib.membersIfazeMethodDefaultAdd.MembersIfazeMethodDefaultAdd"/>
  <interface modifiers="public" name="testing_lib.membersIfazeMethodDelete.MembersIfazeMethodDelete">
    <method modifiers="public abstract" name="method1" return="void"/>
  </interface>
  <interface modifiers="public" name="testing_lib.membersIfazeMethodParamAdd.MembersIfazeMethodParamAdd">
    <method modifiers="public abstract" name="method1" return="void"/>
  </interface>
  <interface modifiers="public" name="testing_lib.membersIfazeMethodParamDelete.MembersIfazeMethodParamDelete">
    <method modifiers="public abstract" name="method1" return="void">
      <parameter type="java.lang.Integer"/>
    </method>
  </interface>
  <interface modifiers="public" name="testing_lib.membersIfazeNestedIfazeAdd.MembersIfazeNestedIfazeAdd"/>
  <class modifiers="public abstract" name="testing_lib.modifierClazzAbstractToNonAbstract.ModifierClazzAbstractToNonAbstract">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public" name="testing_lib.modifierClazzEffectivelyFinalToFinal.ModifierClazzEffectivelyFinalToFinal">
    <constructor modifiers="private"/>
  </class>
  <class modifiers="public final" name="testing_lib.modifierClazzFinalToEffectivelyFinal.ModifierClazzFinalToEffectivelyFinal">
    <constructor modifiers="private"/>
  </class>
  <class modifiers="public final" name="testing_lib.modifierClazzFinalToNonFinal.ModifierClazzFinalToNonFinal">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public" name="testing_lib.modifierClazzNonAbstractToAbstract.ModifierClazzNonAbstractToAbstract">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public" name="testing_lib.modifierClazzNonFinalToFinal.ModifierClazzNonFinalToFinal">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public" name="testing_lib.modifierClazzNonStrictfpToStrictfp.ModifierClazzNonStrictfpToStrictfp">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public" name="testing_lib.modifierClazzStrictfpToNonStrictfp.ModifierClazzStrictfpToNonStrictfp">
    <constructor modifiers="public strictfp"/>
  </class>
  <class modifiers="public" name="testing_lib.modifierFieldFinalToNonFinal.ModifierFieldFinalToNonFinal">
    <constructor modifiers="public"/>
    <field modifiers="public final" name="field" type="java.lang.Integer"/>
  </class>
  <class modifiers="public" name="testing_lib.modifierFieldNonFinalToFinal.ModifierFieldNonFinalToFinal">
    <constructor modifiers="public"/>
    <field modifiers="public" name="field" type="java.lang.Integer"/>
  </class>
  <class modifiers="public" name="testing_lib.modifierFieldNonStaticToStatic.ModifierFieldNonStaticToStatic">
    <constructor modifiers="public"/>
    <field modifiers="public" name="field" type="java.lang.Integer"/>
  </class>
  <class modifiers="public" name="testing_lib.modifierFieldNonTransientToTransient.ModifierFieldNonTransientToTransient">
    <constructor modifiers="public"/>
    <field modifiers="public" name="field" type="java.lang.Integer"/>
  </class>
  <class modifiers="public" name="testing_lib.modifierFieldNonVolatileToVolatile.ModifierFieldNonVolatileToVolatile">
    <constructor modifiers="public"/>
    <field modifiers="public" name="field" type="java.lang.Integer"/>
  </class>
  <class modifiers="public" name="testing_lib.modifierFieldStaticToNonStatic.ModifierFieldStaticToNonStatic">
    <constructor modifiers="public"/>
    <field modifiers="public static" name="field" type="java.lang.Integer"/>
  </class>
  <class modifiers="public" name="testing_lib.modifierFieldVolatileToNonVolatile.ModifierFieldVolatileToNonVolatile">
    <constructor modifiers="public"/>
    <field modifiers="public volatile" name="field" type="java.lang.Integer"/>
  </class>
  <class modifiers="public abstract" name="testing_lib.modifierMethodAbstractToNonAbstract.ModifierMethodAbstractToNonAbstract">
    <constructor modifiers="public"/>
    <method modifiers="public abstract" name="method1" return="void"/>
  </class>
  <class modifiers="public" name="testing_lib.modifierMethodFinalToNonFinal.ModifierMethodFinalToNonFinal">
    <constructor modifiers="public"/>
    <method modifiers="public final" name="method1" return="void"/>
  </class>
  <class modifiers="public" name="testing_lib.modifierMethodNativeToNonNative.ModifierMethodNativeToNonNative">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void"/>
  </class>
  <class modifiers="public abstract" name="testing_lib.modifierMethodNonAbstractToAbstract.ModifierMethodNonAbstractToAbstract">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void"/>
  </class>
  <class modifiers="public" name="testing_lib.modifierMethodNonFinalToFinal.ModifierMethodNonFinalToFinal">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void"/>
  </class>
  <class modifiers="public" name="testing_lib.modifierMethodNonNativeToNative.ModifierMethodNonNativeToNative">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void"/>
  </class>
  <class modifiers="public" name="testing_lib.modifierMethodNonStaticToStatic.ModifierMethodNonStaticToStatic">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void"/>
  </class>
  <class modifiers="public" name="testing_lib.modifierMethodNonStrictfpToStrictfp.ModifierMethodNonStrictfpToStrictfp">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void"/>
  </class>
  <class modifiers="public" name="testing_lib.modifierMethodNonSynchronizedToSynchronized.ModifierMethodNonSynchronizedToSynchronized">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void"/>
  </class>
  <class modifiers="public" name="testing_lib.modifierMethodStaticToNonStatic.ModifierMethodStaticToNonStatic">
    <constructor modifiers="public"/>
    <method modifiers="public static" name="method1" return="void"/>
  </class>
  <class modifiers="public" name="testing_lib.modifierMethodStrictfpToNonStrictfp.ModifierMethodStrictfpToNonStrictfp">
    <constructor modifiers="public"/>
    <method modifiers="public strictfp" name="method1" return="void"/>
  </class>
  <class modifiers="public" name="testing_lib.modifierMethodSynchronizedToNonSynchronized.ModifierMethodSynchronizedToNonSynchronized">
    <constructor modifiers="public"/>
    <method modifiers="public" name="method1" return="void"/>
  </class>
  <class modifiers="public" name="testing_lib.modifierNestedClazzNonStaticToStatic.ModifierNestedClazzNonStaticToStatic">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public" name="testing_lib.modifierNestedClazzNonStaticToStatic.ModifierNestedClazzNonStaticToStatic$NestedClazz">
    <constructor modifiers="public">
      <parameter type="testing_lib.modifierNestedClazzNonStaticToStatic.ModifierNestedClazzNonStaticToStatic"/>
    </constructor>
    <field modifiers="final" name="this$0" type="testing_lib.modifierNestedClazzNonStaticToStatic.ModifierNestedClazzNonStaticToStatic"/>
  </class>
  <class modifiers="public" name="testing_lib.otherClazzDelete.OtherClazzDelete">
    <constructor modifiers="public"/>
  </class>
  <class modifiers="public" name="testing_lib.otherClazzToIfaze.ClazzToIfaze">
    <constructor modifiers="public"/>
  </class>
  <interface modifiers="public" name="testing_lib.otherIfazeDelete.OtherIfazeDelete"/>
  <interface modifiers="public" name="testing_lib.otherIfazeToClass.IfazeToClass"/>
</signature>
